{"version":3,"names":["_semver","require","_path","_fs","_url","_module","nodeVersion","semver","clean","process","version","slice","humanize","val","noext","path","basename","extname","replace","tryResolve","module","resolve","e","assertDirectory","loc","fs","statSync","isDirectory","Error","shouldIgnore","name","ignore","indexOf","ext","base","EXTENSIONS","JSON_AND_EXTENSIONS","checkFile","allowJSON","matchedLoc","extensions","includes","pushTask","taskName","taskDir","suite","suiteName","_taskOpts$externalHel","taskDirStats","actualLoc","expectLoc","execLoc","execLocAlias","taskOptsLoc","stdoutLoc","stderrLoc","sourceMapLoc","sourceMapVisualLoc","inputSourceMap","taskOpts","JSON","parse","stringify","options","_actualLoc","_execLoc","_expectLoc","files","readdirSync","file","join","Object","assign","readFile","length","console","warn","isFile","BABEL_8_BREAKING","buildTestFile","fileName","code","filename","undefined","sourceMapFile","test","optionsDir","dirname","title","disabled","doNotSetSourceType","DO_NOT_SET_SOURCE_TYPE","externalHelpers","validateLogs","ignoreOutput","stdout","stderr","exec","actual","expect","sourceMap","sourceMapVisual","validateSourceMapVisual","sourceMaps","minNodeVersion","minimumVersion","lt","os","Array","isArray","platform","tests","push","throws","wrapPackagesArray","type","names","map","match","monorepoPath","__filename","startsWith","existsSync","resolveOptionPluginOrPreset","overrides","subOption","env","envName","hasOwnProperty","call","plugins","presets","get","entryLoc","suites","rootOpts","rootOptsLoc","suiteOptsLoc","multiple","categories","readFileSync","trimRight"],"sources":["../src/index.ts"],"sourcesContent":["import semver from \"semver\";\nimport path from \"path\";\nimport fs from \"fs\";\nimport { fileURLToPath } from \"url\";\nimport { createRequire } from \"module\";\nimport type { InputOptions } from \"@babel/core\";\nimport type { EncodedSourceMap } from \"@jridgewell/gen-mapping\";\n\nconst require = createRequire(import.meta.url);\n\nconst nodeVersion = semver.clean(process.version.slice(1));\n\nfunction humanize(val: string, noext?: boolean) {\n  if (noext) val = path.basename(val, path.extname(val));\n  return val.replace(/-/g, \" \");\n}\n\ninterface TestIO {\n  loc: string;\n  code: string;\n}\n\nexport interface TestFile extends TestIO {\n  filename: string;\n}\n\nexport interface Test {\n  taskDir: string;\n  title: string;\n  disabled: boolean;\n  options: TaskOptions;\n  optionsDir: string;\n  doNotSetSourceType: boolean;\n  externalHelpers: boolean;\n  ignoreOutput: boolean;\n  stdout: TestIO;\n  stderr: TestIO;\n  exec: TestFile;\n  actual: TestFile;\n  expect: TestFile;\n  inputSourceMap?: EncodedSourceMap;\n  sourceMap: string;\n  sourceMapFile: TestFile;\n  sourceMapVisual: TestFile;\n  validateSourceMapVisual: boolean;\n  validateLogs: boolean;\n}\n\nexport interface TaskOptions extends InputOptions {\n  BABEL_8_BREAKING?: boolean;\n  DO_NOT_SET_SOURCE_TYPE?: boolean;\n  externalHelpers?: boolean;\n  ignoreOutput?: boolean;\n  minNodeVersion?: string;\n  sourceMap?: boolean;\n  os?: string | string[];\n  validateLogs?: boolean;\n  throws?: boolean | string;\n}\n\ntype Suite = {\n  options: TaskOptions;\n  tests: Array<Test>;\n  title: string;\n  filename: string;\n};\n\nfunction tryResolve(module: string) {\n  try {\n    return require.resolve(module);\n  } catch (e) {\n    return null;\n  }\n}\nfunction assertDirectory(loc: string) {\n  if (!fs.statSync(loc).isDirectory()) {\n    throw new Error(`Expected ${loc} to be a directory.`);\n  }\n}\n\nfunction shouldIgnore(name: string, ignore?: Array<string>) {\n  if (ignore && ignore.indexOf(name) >= 0) {\n    return true;\n  }\n\n  const ext = path.extname(name);\n  const base = path.basename(name, ext);\n\n  return (\n    name[0] === \".\" ||\n    ext === \".md\" ||\n    base === \"LICENSE\" ||\n    base === \"options\" ||\n    name === \"package.json\"\n  );\n}\n\nconst EXTENSIONS = [\".js\", \".mjs\", \".ts\", \".tsx\", \".cts\", \".mts\", \".vue\"];\nconst JSON_AND_EXTENSIONS = [\".json\", ...EXTENSIONS];\n\nfunction checkFile(\n  loc: string,\n  allowJSON: boolean,\n  matchedLoc: string | undefined,\n) {\n  const ext = path.extname(loc);\n  const extensions = allowJSON ? JSON_AND_EXTENSIONS : EXTENSIONS;\n\n  if (!extensions.includes(ext)) {\n    throw new Error(`Unsupported input extension: ${loc}`);\n  }\n  if (!matchedLoc) {\n    return loc;\n  } else {\n    throw new Error(`Found conflicting file matches: ${matchedLoc},${loc}`);\n  }\n}\n\nfunction pushTask(\n  taskName: string,\n  taskDir: string,\n  suite: Suite,\n  suiteName: string,\n) {\n  const taskDirStats = fs.statSync(taskDir);\n  let actualLoc,\n    expectLoc,\n    execLoc,\n    execLocAlias,\n    taskOptsLoc,\n    stdoutLoc,\n    stderrLoc,\n    sourceMapLoc,\n    sourceMapVisualLoc,\n    inputSourceMap;\n\n  const taskOpts: TaskOptions = JSON.parse(JSON.stringify(suite.options));\n  if (taskDirStats.isDirectory()) {\n    const files = fs.readdirSync(taskDir);\n    for (const file of files) {\n      const loc = path.join(taskDir, file);\n      const name = path.basename(file, path.extname(file));\n\n      switch (name) {\n        case \"input\":\n          actualLoc = checkFile(loc, false, actualLoc);\n          break;\n        case \"exec\":\n          execLoc = checkFile(loc, false, execLoc);\n          break;\n        case \"output\":\n          expectLoc = checkFile(loc, true, expectLoc);\n          break;\n        case \"output.extended\":\n          expectLoc = checkFile(loc, true, expectLoc);\n          break;\n        case \"options\":\n          taskOptsLoc = loc;\n          Object.assign(taskOpts, require(taskOptsLoc));\n          break;\n        case \"source-map\":\n          sourceMapLoc = loc;\n          break;\n        case \"source-map-visual\":\n          sourceMapVisualLoc = loc;\n          break;\n        case \"input-source-map\":\n          inputSourceMap = JSON.parse(readFile(loc));\n          break;\n      }\n    }\n    // If neither input nor exec is present it is not a real testcase\n    if (files.length > 0 && !actualLoc && !execLoc) {\n      console.warn(`Skipped test folder with invalid layout: ${taskDir}`);\n      return;\n    }\n    actualLoc ??= taskDir + \"/input.js\";\n    execLoc ??= taskDir + \"/exec.js\";\n    expectLoc ??= taskDir + \"/output.js\";\n\n    stdoutLoc = taskDir + \"/stdout.txt\";\n    stderrLoc = taskDir + \"/stderr.txt\";\n  } else if (taskDirStats.isFile()) {\n    const ext = path.extname(taskDir);\n    if (EXTENSIONS.indexOf(ext) === -1) return;\n\n    execLoc = taskDir;\n    execLocAlias = suiteName + \"/\" + taskName;\n  } else {\n    console.warn(`Skipped test folder with invalid layout: ${taskDir}`);\n    return;\n  }\n\n  const shouldIgnore = process.env.BABEL_8_BREAKING\n    ? taskOpts.BABEL_8_BREAKING === false\n    : taskOpts.BABEL_8_BREAKING === true;\n\n  if (shouldIgnore) return;\n\n  function buildTestFile(\n    loc: string | undefined,\n    fileName?: true | string,\n  ): TestFile {\n    return {\n      loc,\n      code: readFile(loc),\n      filename: !loc\n        ? undefined\n        : fileName === true\n          ? suiteName + \"/\" + taskName + \"/\" + path.basename(loc)\n          : fileName || undefined,\n    };\n  }\n\n  const sourceMapFile = buildTestFile(sourceMapLoc, true);\n  // TODO: code should not be a object\n  sourceMapFile.code &&= JSON.parse(sourceMapFile.code);\n\n  const test: Test = {\n    taskDir,\n    optionsDir: taskOptsLoc ? path.dirname(taskOptsLoc) : null,\n    title: humanize(taskName, true),\n    disabled: taskName[0] === \".\",\n    options: taskOpts,\n    doNotSetSourceType: taskOpts.DO_NOT_SET_SOURCE_TYPE,\n    externalHelpers:\n      taskOpts.externalHelpers ??\n      !!tryResolve(\"@babel/plugin-external-helpers\"),\n    validateLogs: taskOpts.validateLogs,\n    ignoreOutput: taskOpts.ignoreOutput,\n    stdout: buildTestFile(stdoutLoc),\n    stderr: buildTestFile(stderrLoc),\n    exec: buildTestFile(execLoc, execLocAlias),\n    actual: buildTestFile(actualLoc, true),\n    expect: buildTestFile(expectLoc, true),\n    sourceMap: sourceMapFile.code,\n    sourceMapFile,\n    sourceMapVisual: buildTestFile(sourceMapVisualLoc),\n    validateSourceMapVisual:\n      taskOpts.sourceMaps === true || taskOpts.sourceMaps === \"both\",\n    inputSourceMap,\n  };\n\n  if (\n    test.exec.code &&\n    test.actual.code &&\n    path.extname(execLoc) !== path.extname(actualLoc)\n  ) {\n    throw new Error(\n      `Input file extension should match exec file extension: ${execLoc}, ${actualLoc}`,\n    );\n  }\n\n  delete taskOpts.BABEL_8_BREAKING;\n  delete taskOpts.DO_NOT_SET_SOURCE_TYPE;\n\n  // If there's node requirement, check it before pushing task\n  if (taskOpts.minNodeVersion) {\n    const minimumVersion = semver.clean(taskOpts.minNodeVersion);\n\n    if (minimumVersion == null) {\n      throw new Error(\n        `'minNodeVersion' has invalid semver format: ${taskOpts.minNodeVersion}`,\n      );\n    }\n\n    if (semver.lt(nodeVersion, minimumVersion)) {\n      return;\n    }\n\n    // Delete to avoid option validation error\n    delete taskOpts.minNodeVersion;\n  }\n\n  if (taskOpts.os) {\n    let os = taskOpts.os;\n\n    if (!Array.isArray(os) && typeof os !== \"string\") {\n      throw new Error(\n        `'os' should be either string or string array: ${taskOpts.os}`,\n      );\n    }\n\n    if (typeof os === \"string\") {\n      os = [os];\n    }\n\n    if (!os.includes(process.platform)) {\n      return;\n    }\n\n    delete taskOpts.os;\n  }\n\n  suite.tests.push(test);\n\n  if (taskOpts.throws) {\n    if (test.expect.code) {\n      throw new Error(\n        \"Test cannot throw and also return output code: \" + expectLoc,\n      );\n    }\n    if (test.sourceMap) {\n      throw new Error(\n        \"Test cannot throw and also return sourcemaps: \" + sourceMapLoc,\n      );\n    }\n  }\n\n  if (!test.validateLogs && (test.stdout.code || test.stderr.code)) {\n    throw new Error(\n      \"stdout.txt and stderr.txt are only allowed when the 'validateLogs' option is enabled: \" +\n        (test.stdout.code ? stdoutLoc : stderrLoc),\n    );\n  }\n  if (test.ignoreOutput) {\n    if (test.expect.code) {\n      throw new Error(\n        \"Test cannot ignore its output and also validate it: \" + expectLoc,\n      );\n    }\n    if (!test.validateLogs) {\n      throw new Error(\n        \"ignoreOutput can only be used when validateLogs is true: \" +\n          taskOptsLoc,\n      );\n    }\n  }\n\n  // Delete to avoid option validation error\n  delete test.options.validateLogs;\n  delete test.options.ignoreOutput;\n  delete test.options.externalHelpers;\n}\n\nfunction wrapPackagesArray(\n  type: \"plugin\" | \"preset\",\n  names: (string | [string, object?, string?])[],\n  optionsDir: string,\n) {\n  return names.map(function (val) {\n    if (typeof val === \"string\") val = [val];\n\n    // relative path (outside of monorepo)\n    if (val[0][0] === \".\") {\n      if (!optionsDir) {\n        throw new Error(\n          \"Please provide an options.json in test dir when using a \" +\n            \"relative plugin path.\",\n        );\n      }\n\n      val[0] = path.resolve(optionsDir, val[0]);\n    } else {\n      let name = val[0];\n      const match = name.match(/^(@babel\\/(?:plugin-|preset-)?)(.*)$/);\n      if (match) {\n        name = match[2];\n      }\n\n      const monorepoPath = path.join(\n        path.dirname(fileURLToPath(import.meta.url)),\n        \"../../..\",\n        name.startsWith(\"codemod\") ? \"codemods\" : \"packages\",\n        `babel-${type}-${name}/lib/index.js`,\n      );\n\n      if (fs.existsSync(monorepoPath)) {\n        if (match) {\n          throw new Error(\n            `Remove the \"${match[1]}\" prefix from \"${val[0]}\", to load it from the monorepo`,\n          );\n        }\n\n        val[0] = monorepoPath;\n      }\n    }\n\n    return val;\n  });\n}\n\n/**\n * Resolve plugins/presets defined in options.json\n *\n * @export\n * @param {{}} options the imported options.json\n * @param {string} optionsDir the directory where options.json is placed\n * @returns {{}} options whose plugins/presets are resolved\n */\nexport function resolveOptionPluginOrPreset(\n  options: any,\n  optionsDir: string,\n): {} {\n  if (options.overrides) {\n    for (const subOption of options.overrides) {\n      resolveOptionPluginOrPreset(subOption, optionsDir);\n    }\n  }\n  if (options.env) {\n    for (const envName in options.env) {\n      if (!{}.hasOwnProperty.call(options.env, envName)) continue;\n      resolveOptionPluginOrPreset(options.env[envName], optionsDir);\n    }\n  }\n  if (options.plugins) {\n    options.plugins = wrapPackagesArray(\"plugin\", options.plugins, optionsDir);\n  }\n  if (options.presets) {\n    options.presets = wrapPackagesArray(\n      \"preset\",\n      options.presets,\n      optionsDir,\n    ).map(function (val) {\n      if (val.length > 3) {\n        throw new Error(\n          \"Unexpected extra options \" +\n            JSON.stringify(val.slice(3)) +\n            \" passed to preset.\",\n        );\n      }\n\n      return val;\n    });\n  }\n  return options;\n}\n\nexport default function get(entryLoc: string) {\n  const suites: Suite[] = [];\n\n  let rootOpts: TaskOptions = {};\n  const rootOptsLoc = tryResolve(entryLoc + \"/options\");\n  if (rootOptsLoc) rootOpts = require(rootOptsLoc);\n\n  for (const suiteName of fs.readdirSync(entryLoc)) {\n    if (shouldIgnore(suiteName)) continue;\n\n    const suite: Suite = {\n      options: { ...rootOpts },\n      tests: [],\n      title: humanize(suiteName),\n      filename: entryLoc + \"/\" + suiteName,\n    };\n\n    assertDirectory(suite.filename);\n    suites.push(suite);\n\n    const suiteOptsLoc = tryResolve(suite.filename + \"/options\");\n    if (suiteOptsLoc) {\n      suite.options = resolveOptionPluginOrPreset(\n        require(suiteOptsLoc),\n        suite.filename,\n      );\n    }\n\n    for (const taskName of fs.readdirSync(suite.filename)) {\n      pushTask(taskName, suite.filename + \"/\" + taskName, suite, suiteName);\n    }\n  }\n\n  return suites;\n}\n\nexport function multiple(entryLoc: string, ignore?: Array<string>) {\n  const categories: Record<string, unknown> = {};\n\n  for (const name of fs.readdirSync(entryLoc)) {\n    if (shouldIgnore(name, ignore)) continue;\n\n    const loc = path.join(entryLoc, name);\n    assertDirectory(loc);\n\n    categories[name] = get(loc);\n  }\n\n  return categories;\n}\n\nexport function readFile(filename: string | undefined) {\n  try {\n    if (filename === undefined) {\n      return \"\";\n    }\n    return fs.readFileSync(filename, \"utf8\").trimRight();\n  } catch (e) {\n    if (e.code === \"ENOENT\") {\n      return \"\";\n    }\n    throw e;\n  }\n}\n"],"mappings":"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"}