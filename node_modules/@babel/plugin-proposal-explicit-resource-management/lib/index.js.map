{"version":3,"names":["_helperPluginUtils","require","_pluginSyntaxExplicitResourceManagement","_core","_default","exports","default","declare","api","assertVersion","TOP_LEVEL_USING","Map","isUsingDeclaration","node","t","isVariableDeclaration","kind","has","transformUsingDeclarationsVisitor","ForOfStatement","path","left","id","declarations","tmpId","scope","generateUidIdentifierBasedOnNode","ensureBlock","body","unshift","variableDeclaration","variableDeclarator","cloneNode","BlockStatement|StaticBlock","state","availableHelper","ctx","needsAwait","_ctx","generateUidIdentifier","isAwaitUsing","get","delete","decl","init","callExpression","memberExpression","identifier","disposeCall","replacement","template","statement","ast","addHelper","awaitExpression","inherits","parentPath","isFunction","isTryStatement","isCatchClause","replaceWith","blockStatement","isStaticBlock","stackId","_stackId","forEach","args","push","booleanLiteral","errorId","hasErrorId","block","transformUsingDeclarationsVisitorSkipFn","traverse","visitors","merge","Function","skip","name","syntaxExplicitResourceManagement","visitor","Program","clear","sourceType","some","innerBlockBody","stmt","isFunctionDeclaration","isImportDeclaration","shouldRemove","isExportDefaultDeclaration","_varId","declaration","varId","isClassDeclaration","toExpression","isExpression","exportNamedDeclaration","exportSpecifier","isExportNamedDeclaration","Object","keys","getOuterBindingIdentifiers","map","isExportDeclaration","set","remove","pushContainer","async"],"sources":["../src/index.ts"],"sourcesContent":["import { declare } from \"@babel/helper-plugin-utils\";\nimport syntaxExplicitResourceManagement from \"@babel/plugin-syntax-explicit-resource-management\";\nimport { types as t, template, traverse, type PluginPass } from \"@babel/core\";\nimport type { NodePath, Visitor } from \"@babel/traverse\";\n\nconst enum USING_KIND {\n  NORMAL,\n  AWAIT,\n}\n\nexport default declare(api => {\n  api.assertVersion(\n    process.env.BABEL_8_BREAKING && process.env.IS_PUBLISH\n      ? PACKAGE_JSON.version\n      : \"^7.22.0\",\n  );\n\n  const TOP_LEVEL_USING = new Map<t.Node, USING_KIND>();\n\n  function isUsingDeclaration(node: t.Node): node is t.VariableDeclaration {\n    if (!t.isVariableDeclaration(node)) return false;\n    return (\n      node.kind === \"using\" ||\n      node.kind === \"await using\" ||\n      TOP_LEVEL_USING.has(node)\n    );\n  }\n\n  const transformUsingDeclarationsVisitor: Visitor<PluginPass> = {\n    ForOfStatement(path: NodePath<t.ForOfStatement>) {\n      const { left } = path.node;\n      if (!isUsingDeclaration(left)) return;\n\n      const { id } = left.declarations[0];\n      const tmpId = path.scope.generateUidIdentifierBasedOnNode(id);\n      left.declarations[0].id = tmpId;\n      left.kind = \"const\";\n\n      path.ensureBlock();\n      path.node.body.body.unshift(\n        t.variableDeclaration(\"using\", [\n          t.variableDeclarator(id, t.cloneNode(tmpId)),\n        ]),\n      );\n    },\n    \"BlockStatement|StaticBlock\"(\n      path: NodePath<t.BlockStatement | t.StaticBlock>,\n      state,\n    ) {\n      if (state.availableHelper(\"usingCtx\")) {\n        let ctx: t.Identifier | null = null;\n        let needsAwait = false;\n\n        for (const node of path.node.body) {\n          if (!isUsingDeclaration(node)) continue;\n          ctx ??= path.scope.generateUidIdentifier(\"usingCtx\");\n          const isAwaitUsing =\n            node.kind === \"await using\" ||\n            TOP_LEVEL_USING.get(node) === USING_KIND.AWAIT;\n          needsAwait ||= isAwaitUsing;\n\n          if (!TOP_LEVEL_USING.delete(node)) {\n            node.kind = \"const\";\n          }\n          for (const decl of node.declarations) {\n            decl.init = t.callExpression(\n              t.memberExpression(\n                t.cloneNode(ctx),\n                isAwaitUsing ? t.identifier(\"a\") : t.identifier(\"u\"),\n              ),\n              [decl.init],\n            );\n          }\n        }\n        if (!ctx) return;\n\n        const disposeCall = t.callExpression(\n          t.memberExpression(t.cloneNode(ctx), t.identifier(\"d\")),\n          [],\n        );\n\n        const replacement = template.statement.ast`\n        try {\n          var ${t.cloneNode(ctx)} = ${state.addHelper(\"usingCtx\")}();\n          ${path.node.body}\n        } catch (_) {\n          ${t.cloneNode(ctx)}.e = _;\n        } finally {\n          ${needsAwait ? t.awaitExpression(disposeCall) : disposeCall}\n        }\n      ` as t.TryStatement;\n\n        t.inherits(replacement, path.node);\n\n        const { parentPath } = path;\n        if (\n          parentPath.isFunction() ||\n          parentPath.isTryStatement() ||\n          parentPath.isCatchClause()\n        ) {\n          path.replaceWith(t.blockStatement([replacement]));\n        } else if (path.isStaticBlock()) {\n          path.node.body = [replacement];\n        } else {\n          path.replaceWith(replacement);\n        }\n      } else {\n        let stackId: t.Identifier | null = null;\n        let needsAwait = false;\n\n        for (const node of path.node.body) {\n          if (!isUsingDeclaration(node)) continue;\n          stackId ??= path.scope.generateUidIdentifier(\"stack\");\n          const isAwaitUsing =\n            node.kind === \"await using\" ||\n            TOP_LEVEL_USING.get(node) === USING_KIND.AWAIT;\n          needsAwait ||= isAwaitUsing;\n\n          if (!TOP_LEVEL_USING.delete(node)) {\n            node.kind = \"const\";\n          }\n          node.declarations.forEach(decl => {\n            const args = [t.cloneNode(stackId), decl.init];\n            if (isAwaitUsing) args.push(t.booleanLiteral(true));\n            decl.init = t.callExpression(state.addHelper(\"using\"), args);\n          });\n        }\n        if (!stackId) return;\n\n        const errorId = path.scope.generateUidIdentifier(\"error\");\n        const hasErrorId = path.scope.generateUidIdentifier(\"hasError\");\n\n        let disposeCall: t.Expression = t.callExpression(\n          state.addHelper(\"dispose\"),\n          [t.cloneNode(stackId), t.cloneNode(errorId), t.cloneNode(hasErrorId)],\n        );\n        if (needsAwait) disposeCall = t.awaitExpression(disposeCall);\n\n        const replacement = template.statement.ast`\n        try {\n          var ${stackId} = [];\n          ${path.node.body}\n        } catch (_) {\n          var ${errorId} = _;\n          var ${hasErrorId} = true;\n        } finally {\n          ${disposeCall}\n        }\n      ` as t.TryStatement;\n\n        t.inherits(replacement.block, path.node);\n\n        const { parentPath } = path;\n        if (\n          parentPath.isFunction() ||\n          parentPath.isTryStatement() ||\n          parentPath.isCatchClause()\n        ) {\n          path.replaceWith(t.blockStatement([replacement]));\n        } else if (path.isStaticBlock()) {\n          path.node.body = [replacement];\n        } else {\n          path.replaceWith(replacement);\n        }\n      }\n    },\n  };\n\n  const transformUsingDeclarationsVisitorSkipFn: Visitor<PluginPass> =\n    traverse.visitors.merge([\n      transformUsingDeclarationsVisitor,\n      {\n        Function(path) {\n          path.skip();\n        },\n      },\n    ]);\n\n  return {\n    name: \"proposal-explicit-resource-management\",\n    inherits: syntaxExplicitResourceManagement,\n\n    visitor: traverse.visitors.merge([\n      transformUsingDeclarationsVisitor,\n      {\n        // To transform top-level using declarations, we must wrap the\n        // module body in a block after hoisting all the exports and imports.\n        // This might cause some variables to be `undefined` rather than TDZ.\n        Program(path) {\n          TOP_LEVEL_USING.clear();\n\n          if (path.node.sourceType !== \"module\") return;\n          if (!path.node.body.some(isUsingDeclaration)) return;\n\n          const innerBlockBody = [];\n          for (const stmt of path.get(\"body\")) {\n            if (stmt.isFunctionDeclaration() || stmt.isImportDeclaration()) {\n              continue;\n            }\n\n            let { node } = stmt;\n            let shouldRemove = true;\n\n            if (stmt.isExportDefaultDeclaration()) {\n              let { declaration } = stmt.node;\n              let varId;\n              if (t.isClassDeclaration(declaration)) {\n                varId = declaration.id;\n                declaration.id = null;\n                declaration = t.toExpression(declaration);\n              } else if (!t.isExpression(declaration)) {\n                continue;\n              }\n\n              varId ??= path.scope.generateUidIdentifier(\"_default\");\n              innerBlockBody.push(\n                t.variableDeclaration(\"var\", [\n                  t.variableDeclarator(varId, declaration),\n                ]),\n              );\n              stmt.replaceWith(\n                t.exportNamedDeclaration(null, [\n                  t.exportSpecifier(\n                    t.cloneNode(varId),\n                    t.identifier(\"default\"),\n                  ),\n                ]),\n              );\n              continue;\n            }\n\n            if (stmt.isExportNamedDeclaration()) {\n              node = stmt.node.declaration;\n              if (!node || t.isFunction(node)) continue;\n\n              stmt.replaceWith(\n                t.exportNamedDeclaration(\n                  null,\n                  Object.keys(t.getOuterBindingIdentifiers(node, false)).map(\n                    id => t.exportSpecifier(t.identifier(id), t.identifier(id)),\n                  ),\n                ),\n              );\n              shouldRemove = false;\n            } else if (stmt.isExportDeclaration()) {\n              continue;\n            }\n\n            if (t.isClassDeclaration(node)) {\n              const { id } = node;\n              node.id = null;\n              innerBlockBody.push(\n                t.variableDeclaration(\"var\", [\n                  t.variableDeclarator(id, t.toExpression(node)),\n                ]),\n              );\n            } else if (t.isVariableDeclaration(node)) {\n              if (node.kind === \"using\") {\n                TOP_LEVEL_USING.set(stmt.node, USING_KIND.NORMAL);\n              } else if (node.kind === \"await using\") {\n                TOP_LEVEL_USING.set(stmt.node, USING_KIND.AWAIT);\n              }\n              node.kind = \"var\";\n              innerBlockBody.push(node);\n            } else {\n              innerBlockBody.push(stmt.node);\n            }\n\n            if (shouldRemove) stmt.remove();\n          }\n\n          path.pushContainer(\"body\", t.blockStatement(innerBlockBody));\n        },\n        // We must transform `await using` in async functions before that\n        // async-to-generator will transform `await` expressions into `yield`\n        Function(path, state) {\n          if (path.node.async) {\n            path.traverse(transformUsingDeclarationsVisitorSkipFn, state);\n          }\n        },\n      },\n    ]),\n  };\n});\n"],"mappings":";;;;;;AAAA,IAAAA,kBAAA,GAAAC,OAAA;AACA,IAAAC,uCAAA,GAAAD,OAAA;AACA,IAAAE,KAAA,GAAAF,OAAA;AAA8E,IAAAG,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAQ/D,IAAAC,0BAAO,EAACC,GAAG,IAAI;EAC5BA,GAAG,CAACC,aAAa,CAGX,SACN,CAAC;EAED,MAAMC,eAAe,GAAG,IAAIC,GAAG,CAAqB,CAAC;EAErD,SAASC,kBAAkBA,CAACC,IAAY,EAAiC;IACvE,IAAI,CAACC,WAAC,CAACC,qBAAqB,CAACF,IAAI,CAAC,EAAE,OAAO,KAAK;IAChD,OACEA,IAAI,CAACG,IAAI,KAAK,OAAO,IACrBH,IAAI,CAACG,IAAI,KAAK,aAAa,IAC3BN,eAAe,CAACO,GAAG,CAACJ,IAAI,CAAC;EAE7B;EAEA,MAAMK,iCAAsD,GAAG;IAC7DC,cAAcA,CAACC,IAAgC,EAAE;MAC/C,MAAM;QAAEC;MAAK,CAAC,GAAGD,IAAI,CAACP,IAAI;MAC1B,IAAI,CAACD,kBAAkB,CAACS,IAAI,CAAC,EAAE;MAE/B,MAAM;QAAEC;MAAG,CAAC,GAAGD,IAAI,CAACE,YAAY,CAAC,CAAC,CAAC;MACnC,MAAMC,KAAK,GAAGJ,IAAI,CAACK,KAAK,CAACC,gCAAgC,CAACJ,EAAE,CAAC;MAC7DD,IAAI,CAACE,YAAY,CAAC,CAAC,CAAC,CAACD,EAAE,GAAGE,KAAK;MAC/BH,IAAI,CAACL,IAAI,GAAG,OAAO;MAEnBI,IAAI,CAACO,WAAW,CAAC,CAAC;MAClBP,IAAI,CAACP,IAAI,CAACe,IAAI,CAACA,IAAI,CAACC,OAAO,CACzBf,WAAC,CAACgB,mBAAmB,CAAC,OAAO,EAAE,CAC7BhB,WAAC,CAACiB,kBAAkB,CAACT,EAAE,EAAER,WAAC,CAACkB,SAAS,CAACR,KAAK,CAAC,CAAC,CAC7C,CACH,CAAC;IACH,CAAC;IACD,4BAA4BS,CAC1Bb,IAAgD,EAChDc,KAAK,EACL;MACA,IAAIA,KAAK,CAACC,eAAe,CAAC,UAAU,CAAC,EAAE;QACrC,IAAIC,GAAwB,GAAG,IAAI;QACnC,IAAIC,UAAU,GAAG,KAAK;QAEtB,KAAK,MAAMxB,IAAI,IAAIO,IAAI,CAACP,IAAI,CAACe,IAAI,EAAE;UAAA,IAAAU,IAAA;UACjC,IAAI,CAAC1B,kBAAkB,CAACC,IAAI,CAAC,EAAE;UAC/B,CAAAyB,IAAA,GAAAF,GAAG,YAAAE,IAAA,GAAHF,GAAG,GAAKhB,IAAI,CAACK,KAAK,CAACc,qBAAqB,CAAC,UAAU,CAAC;UACpD,MAAMC,YAAY,GAChB3B,IAAI,CAACG,IAAI,KAAK,aAAa,IAC3BN,eAAe,CAAC+B,GAAG,CAAC5B,IAAI,CAAC,MAAqB;UAChDwB,UAAU,KAAVA,UAAU,GAAKG,YAAY;UAE3B,IAAI,CAAC9B,eAAe,CAACgC,MAAM,CAAC7B,IAAI,CAAC,EAAE;YACjCA,IAAI,CAACG,IAAI,GAAG,OAAO;UACrB;UACA,KAAK,MAAM2B,IAAI,IAAI9B,IAAI,CAACU,YAAY,EAAE;YACpCoB,IAAI,CAACC,IAAI,GAAG9B,WAAC,CAAC+B,cAAc,CAC1B/B,WAAC,CAACgC,gBAAgB,CAChBhC,WAAC,CAACkB,SAAS,CAACI,GAAG,CAAC,EAChBI,YAAY,GAAG1B,WAAC,CAACiC,UAAU,CAAC,GAAG,CAAC,GAAGjC,WAAC,CAACiC,UAAU,CAAC,GAAG,CACrD,CAAC,EACD,CAACJ,IAAI,CAACC,IAAI,CACZ,CAAC;UACH;QACF;QACA,IAAI,CAACR,GAAG,EAAE;QAEV,MAAMY,WAAW,GAAGlC,WAAC,CAAC+B,cAAc,CAClC/B,WAAC,CAACgC,gBAAgB,CAAChC,WAAC,CAACkB,SAAS,CAACI,GAAG,CAAC,EAAEtB,WAAC,CAACiC,UAAU,CAAC,GAAG,CAAC,CAAC,EACvD,EACF,CAAC;QAED,MAAME,WAAW,GAAGC,cAAQ,CAACC,SAAS,CAACC,GAAI;AACnD;AACA,gBAAgBtC,WAAC,CAACkB,SAAS,CAACI,GAAG,CAAE,MAAKF,KAAK,CAACmB,SAAS,CAAC,UAAU,CAAE;AAClE,YAAYjC,IAAI,CAACP,IAAI,CAACe,IAAK;AAC3B;AACA,YAAYd,WAAC,CAACkB,SAAS,CAACI,GAAG,CAAE;AAC7B;AACA,YAAYC,UAAU,GAAGvB,WAAC,CAACwC,eAAe,CAACN,WAAW,CAAC,GAAGA,WAAY;AACtE;AACA,OAAyB;QAEjBlC,WAAC,CAACyC,QAAQ,CAACN,WAAW,EAAE7B,IAAI,CAACP,IAAI,CAAC;QAElC,MAAM;UAAE2C;QAAW,CAAC,GAAGpC,IAAI;QAC3B,IACEoC,UAAU,CAACC,UAAU,CAAC,CAAC,IACvBD,UAAU,CAACE,cAAc,CAAC,CAAC,IAC3BF,UAAU,CAACG,aAAa,CAAC,CAAC,EAC1B;UACAvC,IAAI,CAACwC,WAAW,CAAC9C,WAAC,CAAC+C,cAAc,CAAC,CAACZ,WAAW,CAAC,CAAC,CAAC;QACnD,CAAC,MAAM,IAAI7B,IAAI,CAAC0C,aAAa,CAAC,CAAC,EAAE;UAC/B1C,IAAI,CAACP,IAAI,CAACe,IAAI,GAAG,CAACqB,WAAW,CAAC;QAChC,CAAC,MAAM;UACL7B,IAAI,CAACwC,WAAW,CAACX,WAAW,CAAC;QAC/B;MACF,CAAC,MAAM;QACL,IAAIc,OAA4B,GAAG,IAAI;QACvC,IAAI1B,UAAU,GAAG,KAAK;QAEtB,KAAK,MAAMxB,IAAI,IAAIO,IAAI,CAACP,IAAI,CAACe,IAAI,EAAE;UAAA,IAAAoC,QAAA;UACjC,IAAI,CAACpD,kBAAkB,CAACC,IAAI,CAAC,EAAE;UAC/B,CAAAmD,QAAA,GAAAD,OAAO,YAAAC,QAAA,GAAPD,OAAO,GAAK3C,IAAI,CAACK,KAAK,CAACc,qBAAqB,CAAC,OAAO,CAAC;UACrD,MAAMC,YAAY,GAChB3B,IAAI,CAACG,IAAI,KAAK,aAAa,IAC3BN,eAAe,CAAC+B,GAAG,CAAC5B,IAAI,CAAC,MAAqB;UAChDwB,UAAU,KAAVA,UAAU,GAAKG,YAAY;UAE3B,IAAI,CAAC9B,eAAe,CAACgC,MAAM,CAAC7B,IAAI,CAAC,EAAE;YACjCA,IAAI,CAACG,IAAI,GAAG,OAAO;UACrB;UACAH,IAAI,CAACU,YAAY,CAAC0C,OAAO,CAACtB,IAAI,IAAI;YAChC,MAAMuB,IAAI,GAAG,CAACpD,WAAC,CAACkB,SAAS,CAAC+B,OAAO,CAAC,EAAEpB,IAAI,CAACC,IAAI,CAAC;YAC9C,IAAIJ,YAAY,EAAE0B,IAAI,CAACC,IAAI,CAACrD,WAAC,CAACsD,cAAc,CAAC,IAAI,CAAC,CAAC;YACnDzB,IAAI,CAACC,IAAI,GAAG9B,WAAC,CAAC+B,cAAc,CAACX,KAAK,CAACmB,SAAS,CAAC,OAAO,CAAC,EAAEa,IAAI,CAAC;UAC9D,CAAC,CAAC;QACJ;QACA,IAAI,CAACH,OAAO,EAAE;QAEd,MAAMM,OAAO,GAAGjD,IAAI,CAACK,KAAK,CAACc,qBAAqB,CAAC,OAAO,CAAC;QACzD,MAAM+B,UAAU,GAAGlD,IAAI,CAACK,KAAK,CAACc,qBAAqB,CAAC,UAAU,CAAC;QAE/D,IAAIS,WAAyB,GAAGlC,WAAC,CAAC+B,cAAc,CAC9CX,KAAK,CAACmB,SAAS,CAAC,SAAS,CAAC,EAC1B,CAACvC,WAAC,CAACkB,SAAS,CAAC+B,OAAO,CAAC,EAAEjD,WAAC,CAACkB,SAAS,CAACqC,OAAO,CAAC,EAAEvD,WAAC,CAACkB,SAAS,CAACsC,UAAU,CAAC,CACtE,CAAC;QACD,IAAIjC,UAAU,EAAEW,WAAW,GAAGlC,WAAC,CAACwC,eAAe,CAACN,WAAW,CAAC;QAE5D,MAAMC,WAAW,GAAGC,cAAQ,CAACC,SAAS,CAACC,GAAI;AACnD;AACA,gBAAgBW,OAAQ;AACxB,YAAY3C,IAAI,CAACP,IAAI,CAACe,IAAK;AAC3B;AACA,gBAAgByC,OAAQ;AACxB,gBAAgBC,UAAW;AAC3B;AACA,YAAYtB,WAAY;AACxB;AACA,OAAyB;QAEjBlC,WAAC,CAACyC,QAAQ,CAACN,WAAW,CAACsB,KAAK,EAAEnD,IAAI,CAACP,IAAI,CAAC;QAExC,MAAM;UAAE2C;QAAW,CAAC,GAAGpC,IAAI;QAC3B,IACEoC,UAAU,CAACC,UAAU,CAAC,CAAC,IACvBD,UAAU,CAACE,cAAc,CAAC,CAAC,IAC3BF,UAAU,CAACG,aAAa,CAAC,CAAC,EAC1B;UACAvC,IAAI,CAACwC,WAAW,CAAC9C,WAAC,CAAC+C,cAAc,CAAC,CAACZ,WAAW,CAAC,CAAC,CAAC;QACnD,CAAC,MAAM,IAAI7B,IAAI,CAAC0C,aAAa,CAAC,CAAC,EAAE;UAC/B1C,IAAI,CAACP,IAAI,CAACe,IAAI,GAAG,CAACqB,WAAW,CAAC;QAChC,CAAC,MAAM;UACL7B,IAAI,CAACwC,WAAW,CAACX,WAAW,CAAC;QAC/B;MACF;IACF;EACF,CAAC;EAED,MAAMuB,uCAA4D,GAChEC,cAAQ,CAACC,QAAQ,CAACC,KAAK,CAAC,CACtBzD,iCAAiC,EACjC;IACE0D,QAAQA,CAACxD,IAAI,EAAE;MACbA,IAAI,CAACyD,IAAI,CAAC,CAAC;IACb;EACF,CAAC,CACF,CAAC;EAEJ,OAAO;IACLC,IAAI,EAAE,uCAAuC;IAC7CvB,QAAQ,EAAEwB,+CAAgC;IAE1CC,OAAO,EAAEP,cAAQ,CAACC,QAAQ,CAACC,KAAK,CAAC,CAC/BzD,iCAAiC,EACjC;MAIE+D,OAAOA,CAAC7D,IAAI,EAAE;QACZV,eAAe,CAACwE,KAAK,CAAC,CAAC;QAEvB,IAAI9D,IAAI,CAACP,IAAI,CAACsE,UAAU,KAAK,QAAQ,EAAE;QACvC,IAAI,CAAC/D,IAAI,CAACP,IAAI,CAACe,IAAI,CAACwD,IAAI,CAACxE,kBAAkB,CAAC,EAAE;QAE9C,MAAMyE,cAAc,GAAG,EAAE;QACzB,KAAK,MAAMC,IAAI,IAAIlE,IAAI,CAACqB,GAAG,CAAC,MAAM,CAAC,EAAE;UACnC,IAAI6C,IAAI,CAACC,qBAAqB,CAAC,CAAC,IAAID,IAAI,CAACE,mBAAmB,CAAC,CAAC,EAAE;YAC9D;UACF;UAEA,IAAI;YAAE3E;UAAK,CAAC,GAAGyE,IAAI;UACnB,IAAIG,YAAY,GAAG,IAAI;UAEvB,IAAIH,IAAI,CAACI,0BAA0B,CAAC,CAAC,EAAE;YAAA,IAAAC,MAAA;YACrC,IAAI;cAAEC;YAAY,CAAC,GAAGN,IAAI,CAACzE,IAAI;YAC/B,IAAIgF,KAAK;YACT,IAAI/E,WAAC,CAACgF,kBAAkB,CAACF,WAAW,CAAC,EAAE;cACrCC,KAAK,GAAGD,WAAW,CAACtE,EAAE;cACtBsE,WAAW,CAACtE,EAAE,GAAG,IAAI;cACrBsE,WAAW,GAAG9E,WAAC,CAACiF,YAAY,CAACH,WAAW,CAAC;YAC3C,CAAC,MAAM,IAAI,CAAC9E,WAAC,CAACkF,YAAY,CAACJ,WAAW,CAAC,EAAE;cACvC;YACF;YAEA,CAAAD,MAAA,GAAAE,KAAK,YAAAF,MAAA,GAALE,KAAK,GAAKzE,IAAI,CAACK,KAAK,CAACc,qBAAqB,CAAC,UAAU,CAAC;YACtD8C,cAAc,CAAClB,IAAI,CACjBrD,WAAC,CAACgB,mBAAmB,CAAC,KAAK,EAAE,CAC3BhB,WAAC,CAACiB,kBAAkB,CAAC8D,KAAK,EAAED,WAAW,CAAC,CACzC,CACH,CAAC;YACDN,IAAI,CAAC1B,WAAW,CACd9C,WAAC,CAACmF,sBAAsB,CAAC,IAAI,EAAE,CAC7BnF,WAAC,CAACoF,eAAe,CACfpF,WAAC,CAACkB,SAAS,CAAC6D,KAAK,CAAC,EAClB/E,WAAC,CAACiC,UAAU,CAAC,SAAS,CACxB,CAAC,CACF,CACH,CAAC;YACD;UACF;UAEA,IAAIuC,IAAI,CAACa,wBAAwB,CAAC,CAAC,EAAE;YACnCtF,IAAI,GAAGyE,IAAI,CAACzE,IAAI,CAAC+E,WAAW;YAC5B,IAAI,CAAC/E,IAAI,IAAIC,WAAC,CAAC2C,UAAU,CAAC5C,IAAI,CAAC,EAAE;YAEjCyE,IAAI,CAAC1B,WAAW,CACd9C,WAAC,CAACmF,sBAAsB,CACtB,IAAI,EACJG,MAAM,CAACC,IAAI,CAACvF,WAAC,CAACwF,0BAA0B,CAACzF,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC0F,GAAG,CACxDjF,EAAE,IAAIR,WAAC,CAACoF,eAAe,CAACpF,WAAC,CAACiC,UAAU,CAACzB,EAAE,CAAC,EAAER,WAAC,CAACiC,UAAU,CAACzB,EAAE,CAAC,CAC5D,CACF,CACF,CAAC;YACDmE,YAAY,GAAG,KAAK;UACtB,CAAC,MAAM,IAAIH,IAAI,CAACkB,mBAAmB,CAAC,CAAC,EAAE;YACrC;UACF;UAEA,IAAI1F,WAAC,CAACgF,kBAAkB,CAACjF,IAAI,CAAC,EAAE;YAC9B,MAAM;cAAES;YAAG,CAAC,GAAGT,IAAI;YACnBA,IAAI,CAACS,EAAE,GAAG,IAAI;YACd+D,cAAc,CAAClB,IAAI,CACjBrD,WAAC,CAACgB,mBAAmB,CAAC,KAAK,EAAE,CAC3BhB,WAAC,CAACiB,kBAAkB,CAACT,EAAE,EAAER,WAAC,CAACiF,YAAY,CAAClF,IAAI,CAAC,CAAC,CAC/C,CACH,CAAC;UACH,CAAC,MAAM,IAAIC,WAAC,CAACC,qBAAqB,CAACF,IAAI,CAAC,EAAE;YACxC,IAAIA,IAAI,CAACG,IAAI,KAAK,OAAO,EAAE;cACzBN,eAAe,CAAC+F,GAAG,CAACnB,IAAI,CAACzE,IAAI,GAAmB,CAAC;YACnD,CAAC,MAAM,IAAIA,IAAI,CAACG,IAAI,KAAK,aAAa,EAAE;cACtCN,eAAe,CAAC+F,GAAG,CAACnB,IAAI,CAACzE,IAAI,GAAkB,CAAC;YAClD;YACAA,IAAI,CAACG,IAAI,GAAG,KAAK;YACjBqE,cAAc,CAAClB,IAAI,CAACtD,IAAI,CAAC;UAC3B,CAAC,MAAM;YACLwE,cAAc,CAAClB,IAAI,CAACmB,IAAI,CAACzE,IAAI,CAAC;UAChC;UAEA,IAAI4E,YAAY,EAAEH,IAAI,CAACoB,MAAM,CAAC,CAAC;QACjC;QAEAtF,IAAI,CAACuF,aAAa,CAAC,MAAM,EAAE7F,WAAC,CAAC+C,cAAc,CAACwB,cAAc,CAAC,CAAC;MAC9D,CAAC;MAGDT,QAAQA,CAACxD,IAAI,EAAEc,KAAK,EAAE;QACpB,IAAId,IAAI,CAACP,IAAI,CAAC+F,KAAK,EAAE;UACnBxF,IAAI,CAACqD,QAAQ,CAACD,uCAAuC,EAAEtC,KAAK,CAAC;QAC/D;MACF;IACF,CAAC,CACF;EACH,CAAC;AACH,CAAC,CAAC"}