{"version":3,"names":["_helperPluginUtils","require","_core","_default","exports","default","declare","api","assertVersion","isProtoKey","node","t","isSpreadElement","isStringLiteral","toComputedKey","key","value","isProtoAssignmentExpression","left","isMemberExpression","property","buildDefaultsCallExpression","expr","ref","file","expressionStatement","callExpression","addHelper","right","name","visitor","AssignmentExpression","path","nodes","object","temp","scope","maybeGenerateMemoised","push","assignmentExpression","cloneNode","replaceWithMultiple","ExpressionStatement","expression","isAssignmentExpression","operator","replaceWith","ObjectExpression","proto","properties","i","length","prop","splice","args","objectExpression"],"sources":["../src/index.ts"],"sourcesContent":["import { declare } from \"@babel/helper-plugin-utils\";\nimport { types as t, type File } from \"@babel/core\";\n\nexport default declare(api => {\n  api.assertVersion(\n    process.env.BABEL_8_BREAKING && process.env.IS_PUBLISH\n      ? PACKAGE_JSON.version\n      : 7,\n  );\n\n  function isProtoKey(node: t.ObjectExpression[\"properties\"][number]) {\n    return (\n      !t.isSpreadElement(node) &&\n      t.isStringLiteral(t.toComputedKey(node, node.key), {\n        value: \"__proto__\",\n      })\n    );\n  }\n\n  function isProtoAssignmentExpression(\n    node: t.Node,\n  ): node is t.MemberExpression {\n    const left = node;\n    return (\n      t.isMemberExpression(left) &&\n      t.isStringLiteral(t.toComputedKey(left, left.property), {\n        value: \"__proto__\",\n      })\n    );\n  }\n\n  function buildDefaultsCallExpression(\n    expr: t.AssignmentExpression,\n    ref: t.MemberExpression[\"object\"],\n    file: File,\n  ) {\n    return t.expressionStatement(\n      t.callExpression(file.addHelper(\"defaults\"), [\n        // @ts-ignore(Babel 7 vs Babel 8) Fixme: support `super.__proto__ = ...`\n        ref,\n        expr.right,\n      ]),\n    );\n  }\n\n  return {\n    name: \"transform-proto-to-assign\",\n\n    visitor: {\n      AssignmentExpression(path, { file }) {\n        if (!isProtoAssignmentExpression(path.node.left)) return;\n\n        const nodes = [];\n        const left = path.node.left.object;\n        const temp = path.scope.maybeGenerateMemoised(left);\n\n        if (temp) {\n          nodes.push(\n            t.expressionStatement(\n              t.assignmentExpression(\n                \"=\",\n                temp,\n                // left must not be Super when `temp` is an identifier\n                // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n                left as t.Expression,\n              ),\n            ),\n          );\n        }\n        nodes.push(\n          buildDefaultsCallExpression(\n            path.node,\n            t.cloneNode(temp || left),\n            file,\n          ),\n        );\n        if (temp) nodes.push(t.cloneNode(temp));\n\n        path.replaceWithMultiple(nodes);\n      },\n\n      ExpressionStatement(path, { file }) {\n        const expr = path.node.expression;\n        if (!t.isAssignmentExpression(expr, { operator: \"=\" })) return;\n\n        if (isProtoAssignmentExpression(expr.left)) {\n          path.replaceWith(\n            buildDefaultsCallExpression(expr, expr.left.object, file),\n          );\n        }\n      },\n\n      ObjectExpression(path, { file }) {\n        let proto;\n        const { node } = path;\n        const { properties } = node;\n\n        for (let i = 0; i < properties.length; i++) {\n          const prop = properties[i];\n          if (isProtoKey(prop)) {\n            // @ts-expect-error Fixme: we should also handle ObjectMethod with __proto__ key\n            proto = prop.value;\n            properties.splice(i, 1);\n            break;\n          }\n        }\n\n        if (proto) {\n          const args = [t.objectExpression([]), proto];\n          if (node.properties.length) args.push(node);\n          path.replaceWith(t.callExpression(file.addHelper(\"extends\"), args));\n        }\n      },\n    },\n  };\n});\n"],"mappings":"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"}