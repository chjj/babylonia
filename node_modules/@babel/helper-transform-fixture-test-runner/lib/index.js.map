{"version":3,"names":["_core","require","babel","_helperFixtures","_codeFrame","helpers","_sourceMapVisualizer","_assert","_fs","_interopRequireWildcard","_path","_vm","_lruCache","_url","_jestDiff","_child_process","_os","_makeDir","_fsReaddirRecursive","_module","_helperCheckDuplicateNodes","_crypto","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","dirname","path","__filename","assert","rejects","block","validateError","Error","EXTERNAL_HELPERS_VERSION","cachedScripts","LruCache","max","contextModuleCache","sharedTestContext","createTestContext","transformWithoutConfigFile","code","opts","transformSync","assign","configFile","babelrc","transformAsyncWithoutConfigFile","transformAsync","context","vm","createContext","process","transform","setTimeout","setImmediate","expect","global","moduleCache","create","runCacheableScriptInTestContext","join","buildExternalHelpers","filename","srcFn","cached","cachedData","script","Script","lineOffset","produceCachedData","cachedDataProduced","module","id","exports","req","runModuleInTestContext","runInContext","relativeFilename","v","w","split","versions","node","paths","b","M","f","_findPath","_nodeModulePaths","concat","fs","readFileSync","runCodeInTestContext","oldCwd","cwd","chdir","src","displayErrors","maybeMockConsole","_x3","_x4","_maybeMockConsole","validateLogs","run","actualLogs","stdout","stderr","result","spy1","jest","spyOn","console","mockImplementation","msg","spy2","mockRestore","_x5","_run","task","actual","expected","exec","options","doNotSetSourceType","optionsDir","ignoreOutput","getOpts","newOpts","ast","loc","filenameRelative","sourceFileName","sourceType","inputSourceMap","resolveOptionPluginOrPreset","execCode","resultExec","execOpts","checkDuplicateNodes","message","codeFrameColumns","inputCode","expectedCode","outputCode","normalizeOutput","throws","statSync","isDirectory","env","CI","expectedFile","replace","log","writeFileSync","unlinkSync","validateFile","toMatch","normalizationOpts","normalizePathSeparator","normalizePresetEnvDebug","taskDir","includes","validateSourceMapVisual","visual","visualizeSourceMap","map","toEqual","sourceMapVisual","_task$sourceMapVisual","OVERWRITE","sourceMaps","sourceMap","sourceMapFile","JSON","stringify","actualCode","expectedLoc","diff","expand","escapeRegExp","string","projectRoot","cwdSymbol","trim","RegExp","platform","parseInt","_default","fixturesLoc","name","suiteOpts","taskOpts","dynamicOpts","suites","getFixtures","testSuite","_suiteOpts$ignoreSuit","ignoreSuites","title","describe","tests","_suiteOpts$ignoreTask","_suiteOpts$ignoreTask2","ignoreTasks","testFn","disabled","it","skip","runTask","externalHelpers","_task$options","_task$options$plugins","plugins","push","helperVersion","throwMsg","ok","nodeGte8","tmpDir","realpathSync","os","tmpdir","readDir","filter","files","existsSync","readdir","forEach","readFile","outputFileSync","filePath","data","makeDir","deleteDir","readdirSync","file","curPath","lstatSync","rmdirSync","fileFilter","x","assertTest","ipcMessage","expectStderr","stderrContains","toContain","toBe","stderrPath","expectStdout","stdoutContains","stdoutPath","ipc","outFiles","actualFiles","keys","inFiles","testLoc","toHaveProperty","buildParallelProcessTests","curr","total","sliceLength","Math","ceil","length","sliceStart","sliceEnd","testsSlice","slice","test","suiteName","testName","buildProcessTests","dir","beforeHook","afterHook","startsWith","suiteLoc","optionsLoc","parse","Array","isArray","executorLoc","executor","babelrcLoc","babelIgnoreLoc","noBabelrc","minNodeVersion","flaky","BABEL_CLI_FLAKY_TESTS","BABEL_8_BREAKING","callback","tmpLoc","createHash","update","digest","binLoc","FORCE_COLOR","child","spawn","execPath","stdio","on","stdin","write","end","captureOutput","proc","chunk","pipe","send","kill","sort","testA","testB","nameA","nameB","localeCompare"],"sources":["../src/index.ts"],"sourcesContent":["/* eslint-env jest */\nimport * as babel from \"@babel/core\";\nimport {\n  buildExternalHelpers,\n  type InputOptions,\n  type FileResult,\n} from \"@babel/core\";\nimport {\n  default as getFixtures,\n  resolveOptionPluginOrPreset,\n  readFile,\n  type Test,\n  type TestFile,\n  type TaskOptions,\n} from \"@babel/helper-fixtures\";\nimport { codeFrameColumns } from \"@babel/code-frame\";\nimport * as helpers from \"./helpers.ts\";\nimport visualizeSourceMap from \"./source-map-visualizer.ts\";\nimport assert from \"assert\";\nimport fs, { readFileSync, realpathSync } from \"fs\";\nimport path from \"path\";\nimport vm from \"vm\";\nimport LruCache from \"lru-cache\";\nimport { fileURLToPath } from \"url\";\nimport { diff } from \"jest-diff\";\nimport type { ChildProcess } from \"child_process\";\nimport { spawn } from \"child_process\";\nimport os from \"os\";\nimport { sync as makeDir } from \"make-dir\";\nimport readdir from \"fs-readdir-recursive\";\n\nimport { createRequire } from \"module\";\nconst require = createRequire(import.meta.url);\nconst dirname = path.dirname(fileURLToPath(import.meta.url));\n\nimport checkDuplicateNodes from \"@babel/helper-check-duplicate-nodes\";\nimport { createHash } from \"crypto\";\n\ntype Module = {\n  id: string;\n  exports: Record<string, unknown>;\n};\n\nif (!process.env.BABEL_8_BREAKING) {\n  // Introduced in Node.js 10\n  if (!assert.rejects) {\n    assert.rejects = async function (block, validateError) {\n      try {\n        await (typeof block === \"function\" ? block() : block);\n        return Promise.reject(new Error(\"Promise not rejected\"));\n      } catch (error) {\n        // @ts-expect-error Fixme: validateError can be a string | object\n        // see https://nodejs.org/api/assert.html#assertrejectsasyncfn-error-message\n        if (typeof validateError === \"function\" && !validateError(error)) {\n          return Promise.reject(\n            new Error(\"Promise rejected with invalid error\"),\n          );\n        }\n      }\n    };\n  }\n}\n\nconst EXTERNAL_HELPERS_VERSION = \"7.100.0\";\n\nconst cachedScripts = new LruCache<\n  string,\n  { code: string; cachedData?: Buffer }\n>({ max: 10 });\nconst contextModuleCache = new WeakMap();\nconst sharedTestContext = createTestContext();\n\n// We never want our tests to accidentally load the root\n// babel.config.js file, so we disable config loading by\n// default. Tests can still set `configFile: true | string`\n// to re-enable config loading.\nfunction transformWithoutConfigFile(code: string, opts: InputOptions) {\n  return babel.transformSync(code, {\n    configFile: false,\n    babelrc: false,\n    ...opts,\n  });\n}\nfunction transformAsyncWithoutConfigFile(code: string, opts: InputOptions) {\n  return babel.transformAsync(code, {\n    configFile: false,\n    babelrc: false,\n    ...opts,\n  });\n}\n\nexport function createTestContext() {\n  const context = vm.createContext({\n    ...helpers,\n    process: process,\n    transform: transformWithoutConfigFile,\n    transformAsync: transformAsyncWithoutConfigFile,\n    setTimeout: setTimeout,\n    setImmediate: setImmediate,\n    expect,\n  });\n  context.global = context;\n\n  const moduleCache = Object.create(null);\n  contextModuleCache.set(context, moduleCache);\n\n  // Populate the \"babelHelpers\" global with Babel's helper utilities.\n  runCacheableScriptInTestContext(\n    path.join(\n      path.dirname(fileURLToPath(import.meta.url)),\n      \"babel-helpers-in-memory.js\",\n    ),\n    buildExternalHelpers,\n    context,\n    moduleCache,\n  );\n\n  return context;\n}\n\nfunction runCacheableScriptInTestContext(\n  filename: string,\n  srcFn: () => string,\n  context: vm.Context,\n  moduleCache: any,\n): Module {\n  let cached = cachedScripts.get(filename);\n  if (!cached) {\n    const code = `(function (exports, require, module, __filename, __dirname) {\\n${srcFn()}\\n});`;\n    cached = {\n      code,\n      cachedData: undefined,\n    };\n    cachedScripts.set(filename, cached);\n  }\n\n  let script: vm.Script;\n  if (process.env.BABEL_8_BREAKING) {\n    script = new vm.Script(cached.code, {\n      filename,\n      lineOffset: -1,\n      cachedData: cached.cachedData,\n    });\n    cached.cachedData = script.createCachedData();\n  } else {\n    script = new vm.Script(cached.code, {\n      filename,\n      lineOffset: -1,\n      cachedData: cached.cachedData,\n      produceCachedData: true,\n    });\n    if (script.cachedDataProduced) {\n      cached.cachedData = script.cachedData;\n    }\n  }\n\n  const module = {\n    id: filename,\n    exports: {},\n  };\n  moduleCache[filename] = module;\n\n  const req = (id: string) =>\n    runModuleInTestContext(id, filename, context, moduleCache);\n  const dirname = path.dirname(filename);\n\n  script\n    .runInContext(context)\n    .call(module.exports, module.exports, req, module, filename, dirname);\n\n  return module;\n}\n\n/**\n * A basic implementation of CommonJS so we can execute `@babel/polyfill` inside our test context.\n * This allows us to run our unittests\n */\nfunction runModuleInTestContext(\n  id: string,\n  relativeFilename: string,\n  context: vm.Context,\n  moduleCache: any,\n) {\n  const filename = require.resolve(id, {\n    paths: [path.dirname(relativeFilename)],\n  });\n\n  // Expose Node-internal modules if the tests want them. Note, this will not execute inside\n  // the context's global scope.\n  if (filename === id) return require(id);\n\n  // Modules can only evaluate once per context, so the moduleCache is a\n  // stronger cache guarantee than the LRU's Script cache.\n  if (moduleCache[filename]) return moduleCache[filename].exports;\n\n  return runCacheableScriptInTestContext(\n    filename,\n    () => fs.readFileSync(filename, \"utf8\"),\n    context,\n    moduleCache,\n  ).exports;\n}\n\n/**\n * Run the given snippet of code inside a CommonJS module.\n *\n * Exposed for unit tests, not for use as an API.\n */\nexport function runCodeInTestContext(\n  code: string,\n  opts: {\n    filename: string;\n  },\n  context = sharedTestContext,\n) {\n  const filename = opts.filename;\n  const dirname = path.dirname(filename);\n  const moduleCache = contextModuleCache.get(context);\n  const req = (id: string) =>\n    runModuleInTestContext(id, filename, context, moduleCache);\n\n  const module: Module = {\n    id: filename,\n    exports: {},\n  };\n\n  const oldCwd = process.cwd();\n  try {\n    if (opts.filename) process.chdir(path.dirname(opts.filename));\n\n    // Expose the test options as \"opts\", but otherwise run the test in a CommonJS-like environment.\n    // Note: This isn't doing .call(module.exports, ...) because some of our tests currently\n    // rely on 'this === global'.\n    const src = `(function(exports, require, module, __filename, __dirname, opts) {\\n${code}\\n});`;\n    return vm.runInContext(src, context, {\n      filename,\n      displayErrors: true,\n      lineOffset: -1,\n    })(module.exports, req, module, filename, dirname, opts);\n  } finally {\n    process.chdir(oldCwd);\n  }\n}\n\nasync function maybeMockConsole<R>(\n  validateLogs: boolean,\n  run: () => Promise<R>,\n) {\n  const actualLogs = { stdout: \"\", stderr: \"\" };\n\n  if (!validateLogs) return { result: await run(), actualLogs };\n\n  const spy1 = jest.spyOn(console, \"log\").mockImplementation(msg => {\n    actualLogs.stdout += `${msg}\\n`;\n  });\n  const spy2 = jest.spyOn(console, \"warn\").mockImplementation(msg => {\n    actualLogs.stderr += `${msg}\\n`;\n  });\n\n  try {\n    return { result: await run(), actualLogs };\n  } finally {\n    spy1.mockRestore();\n    spy2.mockRestore();\n  }\n}\n\nasync function run(task: Test) {\n  const {\n    actual,\n    expect: expected,\n    exec,\n    options: opts,\n    doNotSetSourceType,\n    optionsDir,\n    validateLogs,\n    ignoreOutput,\n    stdout,\n    stderr,\n  } = task;\n\n  // todo(flow->ts) add proper return type (added any, because empty object is inferred)\n  function getOpts(self: TestFile): any {\n    const newOpts = {\n      ast: true,\n      cwd: path.dirname(self.loc),\n      filename: self.loc,\n      filenameRelative: self.filename,\n      sourceFileName: self.filename,\n      ...(doNotSetSourceType ? {} : { sourceType: \"script\" }),\n      babelrc: false,\n      configFile: false,\n      inputSourceMap: task.inputSourceMap || undefined,\n      ...opts,\n    };\n\n    return resolveOptionPluginOrPreset(newOpts, optionsDir);\n  }\n\n  let execCode = exec.code;\n  let result: FileResult;\n  let resultExec;\n\n  if (execCode) {\n    const context = createTestContext();\n    const execOpts = getOpts(exec);\n\n    // Ignore Babel logs of exec.js files.\n    // They will be validated in input/output files.\n    ({ result } = await maybeMockConsole(validateLogs, () =>\n      babel.transformAsync(execCode, execOpts),\n    ));\n\n    checkDuplicateNodes(result.ast);\n    execCode = result.code;\n\n    try {\n      resultExec = runCodeInTestContext(execCode, execOpts, context);\n    } catch (err) {\n      // Pass empty location to include the whole file in the output.\n      err.message =\n        `${exec.loc}: ${err.message}\\n` + codeFrameColumns(execCode, {} as any);\n      throw err;\n    }\n  }\n\n  const inputCode = actual.code;\n  const expectedCode = expected.code;\n  if (!execCode || inputCode) {\n    let actualLogs;\n\n    ({ result, actualLogs } = await maybeMockConsole(validateLogs, () =>\n      babel.transformAsync(inputCode, getOpts(actual)),\n    ));\n\n    const outputCode = normalizeOutput(result.code);\n\n    checkDuplicateNodes(result.ast);\n    if (!ignoreOutput) {\n      if (\n        !expected.code &&\n        outputCode &&\n        !opts.throws &&\n        fs.statSync(path.dirname(expected.loc)).isDirectory() &&\n        !process.env.CI\n      ) {\n        const expectedFile = expected.loc.replace(\n          /\\.m?js$/,\n          result.sourceType === \"module\" ? \".mjs\" : \".js\",\n        );\n\n        console.log(`New test file created: ${expectedFile}`);\n        fs.writeFileSync(expectedFile, `${outputCode}\\n`);\n\n        if (expected.loc !== expectedFile) {\n          try {\n            fs.unlinkSync(expected.loc);\n          } catch (e) {}\n        }\n      } else {\n        validateFile(outputCode, expected.loc, expectedCode);\n\n        if (inputCode) {\n          expect(expected.loc).toMatch(\n            result.sourceType === \"module\" ? /\\.mjs$/ : /\\.js$/,\n          );\n        }\n      }\n    }\n\n    if (validateLogs) {\n      const normalizationOpts = {\n        normalizePathSeparator: true,\n        normalizePresetEnvDebug: task.taskDir.includes(\"babel-preset-env\"),\n      };\n\n      validateFile(\n        normalizeOutput(actualLogs.stdout, normalizationOpts),\n        stdout.loc,\n        process.env.BABEL_8_BREAKING\n          ? // In Babel 8, preset-env does not enable all the unnecessary syntax\n            // plugins. For simplicity, just strip them fro the expected output\n            // so that we do not need to separate tests for every fixture.\n            stdout.code.replace(\n              /\\n\\s*syntax-(?!import-attributes|import-assertions).*/g,\n              \"\",\n            )\n          : stdout.code,\n      );\n      validateFile(\n        normalizeOutput(actualLogs.stderr, normalizationOpts),\n        stderr.loc,\n        stderr.code,\n      );\n    }\n  }\n\n  if (task.validateSourceMapVisual === true) {\n    const visual = visualizeSourceMap(result.code, result.map);\n    try {\n      expect(visual).toEqual(task.sourceMapVisual.code);\n    } catch (e) {\n      if (!process.env.OVERWRITE && task.sourceMapVisual.code) throw e;\n\n      console.log(`Updated test file: ${task.sourceMapVisual.loc}`);\n      fs.writeFileSync(\n        task.sourceMapVisual.loc ?? task.taskDir + \"/source-map-visual.txt\",\n        visual + \"\\n\",\n      );\n    }\n  }\n\n  if (opts.sourceMaps === true) {\n    try {\n      expect(result.map).toEqual(task.sourceMap);\n    } catch (e) {\n      if (!process.env.OVERWRITE && task.sourceMap) throw e;\n\n      console.log(`Updated test file: ${task.sourceMapFile.loc}`);\n      fs.writeFileSync(\n        task.sourceMapFile.loc,\n        JSON.stringify(result.map, null, 2),\n      );\n    }\n  }\n\n  if (execCode && resultExec) {\n    return resultExec;\n  }\n}\n\nfunction validateFile(\n  actualCode: string,\n  expectedLoc: string,\n  expectedCode: string,\n) {\n  if (actualCode !== expectedCode) {\n    if (process.env.OVERWRITE) {\n      console.log(`Updated test file: ${expectedLoc}`);\n      fs.writeFileSync(expectedLoc, `${actualCode}\\n`);\n      return;\n    }\n\n    throw new Error(\n      `Expected ${expectedLoc} to match transform output.\\n` +\n        `To autogenerate a passing version of this file, delete ` +\n        ` the file and re-run the tests.\\n\\n` +\n        `Diff:\\n\\n${diff(expectedCode, actualCode, { expand: false })}`,\n    );\n  }\n}\n\nfunction escapeRegExp(string: string) {\n  return string.replace(/[|\\\\{}()[\\]^$+*?.]/g, \"\\\\$&\");\n}\n\nfunction normalizeOutput(\n  code: string,\n  { normalizePathSeparator = false, normalizePresetEnvDebug = false } = {},\n) {\n  const projectRoot = path.resolve(\n    path.dirname(fileURLToPath(import.meta.url)),\n    \"../../../\",\n  );\n  const cwdSymbol = \"<CWD>\";\n  let result = code\n    .trim()\n    // (non-win32) /foo/babel/packages -> <CWD>/packages\n    // (win32) C:\\foo\\babel\\packages -> <CWD>\\packages\n    .replace(new RegExp(escapeRegExp(projectRoot), \"g\"), cwdSymbol);\n  if (process.platform === \"win32\") {\n    result = result\n      // C:/foo/babel/packages -> <CWD>/packages\n      .replace(\n        new RegExp(escapeRegExp(projectRoot.replace(/\\\\/g, \"/\")), \"g\"),\n        cwdSymbol,\n      )\n      // C:\\\\foo\\\\babel\\\\packages -> <CWD>\\\\packages (in js string literal)\n      .replace(\n        new RegExp(escapeRegExp(projectRoot.replace(/\\\\/g, \"\\\\\\\\\")), \"g\"),\n        cwdSymbol,\n      );\n    if (normalizePathSeparator) {\n      result = result.replace(/<CWD>[\\w\\\\/.-]+/g, path =>\n        path.replace(/\\\\\\\\?/g, \"/\"),\n      );\n    }\n  }\n\n  if (!process.env.BABEL_8_BREAKING) {\n    // In Babel 8, preset-env logs transform- instead of proposal-. Manually rewrite\n    // the output logs so that we don't have to duplicate all the debug fixtures for\n    // the two different Babel versions.\n    if (normalizePresetEnvDebug) {\n      result = result.replace(/(\\s+)proposal-/gm, \"$1transform-\");\n    }\n\n    // For some reasons, in older Node.js versions some symlinks are not properly\n    // resolved. The behavior is still ok, but we need to unify the output with\n    // newer Node.js versions.\n    if (parseInt(process.versions.node, 10) <= 8) {\n      result = result.replace(\n        /<CWD>\\/node_modules\\/@babel\\/runtime-corejs3/g,\n        \"<CWD>/packages/babel-runtime-corejs3\",\n      );\n    }\n  }\n\n  return result;\n}\n\nexport type SuiteOptions = {\n  ignoreSuites?: string[];\n  ignoreTasks?: string[];\n};\n\nexport default function (\n  fixturesLoc: string,\n  name: string,\n  suiteOpts: SuiteOptions = {},\n  taskOpts: TaskOptions = {},\n  dynamicOpts?: (options: TaskOptions, task: Test) => void,\n) {\n  const suites = getFixtures(fixturesLoc);\n\n  for (const testSuite of suites) {\n    if (suiteOpts.ignoreSuites?.includes(testSuite.title)) continue;\n\n    describe(name + \"/\" + testSuite.title, function () {\n      for (const task of testSuite.tests) {\n        if (\n          suiteOpts.ignoreTasks?.includes(task.title) ||\n          suiteOpts.ignoreTasks?.includes(testSuite.title + \"/\" + task.title)\n        ) {\n          continue;\n        }\n\n        const testFn = task.disabled ? it.skip : it;\n\n        testFn(\n          task.title,\n\n          async function () {\n            const runTask = () => run(task);\n\n            if (\"sourceMap\" in task.options) {\n              throw new Error(\n                \"`sourceMap` option is deprecated. Use `sourceMaps` instead.\",\n              );\n            }\n\n            if (\"sourceMaps\" in task.options === false) {\n              task.options.sourceMaps = !!task.sourceMap;\n            }\n\n            Object.assign(task.options, taskOpts);\n\n            if (dynamicOpts) dynamicOpts(task.options, task);\n\n            if (task.externalHelpers) {\n              (task.options.plugins ??= [])\n                // @ts-expect-error manipulating input options\n                .push([\n                  \"external-helpers\",\n                  { helperVersion: EXTERNAL_HELPERS_VERSION },\n                ]);\n            }\n\n            const throwMsg = task.options.throws;\n            if (throwMsg) {\n              // internal api doesn't have this option but it's best not to pollute\n              // the options object with useless options\n              delete task.options.throws;\n\n              await assert.rejects(runTask, function (err: Error) {\n                assert.ok(\n                  throwMsg === true || err.message.includes(throwMsg),\n                  `\nExpected Error: ${throwMsg}\nActual Error: ${err.message}`,\n                );\n                return true;\n              });\n            } else {\n              return runTask();\n            }\n          },\n        );\n      }\n    });\n  }\n}\n\nexport type ProcessTestOpts = {\n  args: string[];\n  executor?: string;\n  ipc?: boolean;\n  ipcMessage?: string;\n  stdout?: string;\n  stderr?: string;\n  stdin?: string;\n  stdoutPath?: string;\n  stderrPath?: string;\n  stdoutContains?: boolean;\n  stderrContains?: boolean;\n  testLoc?: string;\n  outFiles?: Record<string, string>;\n  inFiles?: Record<string, string>;\n  noBabelrc?: boolean;\n  minNodeVersion?: number;\n  flaky?: boolean;\n  env?: Record<string, string>;\n  BABEL_8_BREAKING?: boolean;\n};\n\nexport type ProcessTest = {\n  suiteName: string;\n  testName: string;\n  skip: boolean;\n  fn: Function;\n  opts: ProcessTestOpts;\n  binLoc?: string;\n};\n\nexport type ProcessTestBeforeHook = (test: ProcessTest, tmpDir: string) => void;\nexport type ProcessTestAfterHook = (\n  test: ProcessTest,\n  tmpDir: string,\n  stdout: string,\n  stderr: string,\n) => {\n  stdout: string;\n  stderr: string;\n};\n\nconst nodeGte8 = parseInt(process.versions.node, 10) >= 8;\n\n// https://github.com/nodejs/node/issues/11422#issue-208189446\nconst tmpDir = realpathSync(os.tmpdir());\n\nconst readDir = function (loc: string, filter: Parameters<typeof readdir>[1]) {\n  const files: Record<string, string> = {};\n  if (fs.existsSync(loc)) {\n    readdir(loc, filter).forEach(function (filename) {\n      files[filename] = readFile(path.join(loc, filename));\n    });\n  }\n  return files;\n};\n\nconst outputFileSync = function (filePath: string, data: string) {\n  makeDir(path.dirname(filePath));\n  fs.writeFileSync(filePath, data);\n};\n\nfunction deleteDir(path: string): void {\n  if (fs.existsSync(path)) {\n    fs.readdirSync(path).forEach(function (file) {\n      const curPath = path + \"/\" + file;\n      if (fs.lstatSync(curPath).isDirectory()) {\n        // recurse\n        deleteDir(curPath);\n      } else {\n        // delete file\n        fs.unlinkSync(curPath);\n      }\n    });\n    fs.rmdirSync(path);\n  }\n}\n\nconst fileFilter = function (x: string) {\n  return x !== \".DS_Store\";\n};\n\nconst assertTest = function (\n  stdout: string,\n  stderr: string,\n  ipcMessage: unknown,\n  opts: ProcessTestOpts,\n  tmpDir: string,\n) {\n  const expectStderr = opts.stderr.trim();\n  stderr = stderr.trim();\n\n  try {\n    if (opts.stderr) {\n      if (opts.stderrContains) {\n        expect(stderr).toContain(expectStderr);\n      } else {\n        expect(stderr).toBe(expectStderr);\n      }\n    } else if (stderr) {\n      throw new Error(\"stderr:\\n\" + stderr);\n    }\n  } catch (e) {\n    if (!process.env.OVERWRITE) throw e;\n    console.log(`Updated test file: ${opts.stderrPath}`);\n    outputFileSync(opts.stderrPath, stderr + \"\\n\");\n  }\n\n  const expectStdout = opts.stdout.trim();\n  stdout = stdout.trim();\n  stdout = stdout.replace(/\\\\/g, \"/\");\n\n  try {\n    if (opts.stdout) {\n      if (opts.stdoutContains) {\n        expect(stdout).toContain(expectStdout);\n      } else {\n        expect(stdout).toBe(expectStdout);\n      }\n    } else if (stdout) {\n      throw new Error(\"stdout:\\n\" + stdout);\n    }\n  } catch (e) {\n    console.log(JSON.stringify(opts.stdout), JSON.stringify(stdout));\n    if (!process.env.OVERWRITE) throw e;\n    console.log(`Updated test file: ${opts.stdoutPath}`);\n    outputFileSync(opts.stdoutPath, stdout + \"\\n\");\n  }\n\n  if (opts.ipc) {\n    expect(ipcMessage).toEqual(opts.ipcMessage);\n  }\n\n  if (opts.outFiles) {\n    const actualFiles = readDir(tmpDir, fileFilter);\n\n    Object.keys(actualFiles).forEach(function (filename) {\n      try {\n        if (\n          // saveInFiles always creates an empty .babelrc, so lets exclude for now\n          filename !== \".babelrc\" &&\n          filename !== \".babelignore\" &&\n          !Object.prototype.hasOwnProperty.call(opts.inFiles, filename)\n        ) {\n          const expected = opts.outFiles[filename];\n          const actual = actualFiles[filename];\n\n          expect(actual).toBe(expected || \"\");\n        }\n      } catch (e) {\n        if (!process.env.OVERWRITE) {\n          e.message += \"\\n at \" + filename;\n          throw e;\n        }\n        const expectedLoc = path.join(opts.testLoc, \"out-files\", filename);\n        console.log(`Updated test file: ${expectedLoc}`);\n        outputFileSync(expectedLoc, actualFiles[filename]);\n      }\n    });\n\n    Object.keys(opts.outFiles).forEach(function (filename) {\n      expect(actualFiles).toHaveProperty([filename]);\n    });\n  }\n};\n\nexport function buildParallelProcessTests(name: string, tests: ProcessTest[]) {\n  return function (curr: number, total: number) {\n    const sliceLength = Math.ceil(tests.length / total);\n    const sliceStart = curr * sliceLength;\n    const sliceEnd = sliceStart + sliceLength;\n    const testsSlice = tests.slice(sliceStart, sliceEnd);\n\n    describe(`${name} [${curr}/${total}]`, function () {\n      it(\"dummy\", () => {});\n      for (const test of testsSlice) {\n        (test.skip ? it.skip : it)(\n          test.suiteName + \" \" + test.testName,\n          test.fn as any,\n        );\n      }\n    });\n  };\n}\n\nexport function buildProcessTests(\n  dir: string,\n  beforeHook: ProcessTestBeforeHook,\n  afterHook?: ProcessTestAfterHook,\n) {\n  const tests: ProcessTest[] = [];\n\n  fs.readdirSync(dir).forEach(function (suiteName) {\n    if (suiteName.startsWith(\".\") || suiteName === \"package.json\") return;\n\n    const suiteLoc = path.join(dir, suiteName);\n\n    fs.readdirSync(suiteLoc).forEach(function (testName) {\n      if (testName.startsWith(\".\")) return;\n\n      const testLoc = path.join(suiteLoc, testName);\n\n      let opts: ProcessTestOpts = {\n        args: [],\n      };\n\n      const optionsLoc = path.join(testLoc, \"options.json\");\n      if (fs.existsSync(optionsLoc)) {\n        const taskOpts = JSON.parse(readFileSync(optionsLoc, \"utf8\"));\n        if (taskOpts.os) {\n          let os = taskOpts.os;\n\n          if (!Array.isArray(os) && typeof os !== \"string\") {\n            throw new Error(\n              `'os' should be either string or string array: ${taskOpts.os}`,\n            );\n          }\n\n          if (typeof os === \"string\") {\n            os = [os];\n          }\n\n          if (!os.includes(process.platform)) {\n            return;\n          }\n\n          delete taskOpts.os;\n        }\n        opts = { args: [], ...taskOpts };\n      }\n\n      const executorLoc = path.join(testLoc, \"executor.js\");\n      if (fs.existsSync(executorLoc)) {\n        opts.executor = executorLoc;\n      }\n\n      opts.stderrPath = path.join(testLoc, \"stderr.txt\");\n      opts.stdoutPath = path.join(testLoc, \"stdout.txt\");\n      for (const key of [\"stdout\", \"stdin\", \"stderr\"] as const) {\n        const loc = path.join(testLoc, key + \".txt\");\n        if (fs.existsSync(loc)) {\n          opts[key] = readFile(loc);\n        } else {\n          opts[key] = opts[key] || \"\";\n        }\n      }\n\n      opts.testLoc = testLoc;\n      opts.outFiles = readDir(path.join(testLoc, \"out-files\"), fileFilter);\n      opts.inFiles = readDir(path.join(testLoc, \"in-files\"), fileFilter);\n\n      const babelrcLoc = path.join(testLoc, \".babelrc\");\n      const babelIgnoreLoc = path.join(testLoc, \".babelignore\");\n      if (fs.existsSync(babelrcLoc)) {\n        // copy .babelrc file to tmp directory\n        opts.inFiles[\".babelrc\"] = readFile(babelrcLoc);\n      } else if (!opts.noBabelrc) {\n        opts.inFiles[\".babelrc\"] = \"{}\";\n      }\n      if (fs.existsSync(babelIgnoreLoc)) {\n        // copy .babelignore file to tmp directory\n        opts.inFiles[\".babelignore\"] = readFile(babelIgnoreLoc);\n      }\n\n      const skip =\n        (opts.minNodeVersion &&\n          parseInt(process.versions.node, 10) < opts.minNodeVersion) ||\n        (opts.flaky && !process.env.BABEL_CLI_FLAKY_TESTS) ||\n        opts.BABEL_8_BREAKING === false;\n\n      if (opts.flaky) {\n        testName += \" (flaky)\";\n      }\n\n      const test: ProcessTest = {\n        suiteName,\n        testName,\n        skip,\n        opts,\n        fn: function (callback: Function) {\n          const tmpLoc = path.join(\n            tmpDir,\n            \"babel-process-test\",\n            createHash(\"sha1\").update(testLoc).digest(\"hex\"),\n          );\n          deleteDir(tmpLoc);\n          makeDir(tmpLoc);\n\n          const { inFiles } = opts;\n          for (const filename of Object.keys(inFiles)) {\n            outputFileSync(path.join(tmpLoc, filename), inFiles[filename]);\n          }\n\n          try {\n            beforeHook(test, tmpLoc);\n\n            if (test.binLoc === undefined) {\n              throw new Error(\"test.binLoc is undefined\");\n            }\n\n            let args =\n              opts.executor && nodeGte8\n                ? [\n                    \"--require\",\n                    path.join(dirname, \"./exit-loader.cjs\"),\n                    test.binLoc,\n                  ]\n                : [test.binLoc];\n\n            args = args.concat(opts.args);\n            const env = { ...process.env, FORCE_COLOR: \"false\", ...opts.env };\n            const child = spawn(process.execPath, args, {\n              env,\n              cwd: tmpLoc,\n              stdio:\n                (opts.executor && nodeGte8) || opts.ipc\n                  ? [\"pipe\", \"pipe\", \"pipe\", \"ipc\"]\n                  : \"pipe\",\n            });\n\n            let stderr = \"\";\n            let stdout = \"\";\n            let ipcMessage: unknown;\n\n            child.on(\"close\", function () {\n              let err;\n\n              try {\n                const result = afterHook\n                  ? afterHook(test, tmpLoc, stdout, stderr)\n                  : { stdout, stderr };\n                assertTest(\n                  result.stdout,\n                  result.stderr,\n                  ipcMessage,\n                  opts,\n                  tmpLoc,\n                );\n              } catch (e) {\n                err = e;\n              } finally {\n                try {\n                  deleteDir(tmpLoc);\n                } catch (error) {\n                  console.error(error);\n                }\n              }\n\n              if (err) {\n                err.message =\n                  args.map(arg => `\"${arg}\"`).join(\" \") + \": \" + err.message;\n              }\n\n              callback(err);\n            });\n\n            if (opts.ipc) {\n              child.on(\"message\", function (message) {\n                ipcMessage = message;\n              });\n            }\n\n            if (opts.stdin) {\n              child.stdin.write(opts.stdin);\n              child.stdin.end();\n            }\n\n            const captureOutput = (proc: ChildProcess) => {\n              proc.stderr.on(\"data\", function (chunk) {\n                stderr += chunk;\n              });\n\n              proc.stdout.on(\"data\", function (chunk) {\n                stdout += chunk;\n              });\n            };\n\n            if (opts.executor) {\n              const executor = spawn(process.execPath, [opts.executor], {\n                cwd: tmpLoc,\n              });\n\n              child.stdout.pipe(executor.stdin);\n              child.stderr.pipe(executor.stdin);\n\n              executor.on(\"close\", function () {\n                if (nodeGte8) {\n                  child.send(\"exit\");\n                } else {\n                  child.kill(\"SIGKILL\");\n                }\n              });\n\n              captureOutput(executor);\n            } else {\n              captureOutput(child);\n            }\n          } catch (e) {\n            deleteDir(tmpLoc);\n            throw e;\n          }\n        },\n      };\n      tests.push(test);\n    });\n  });\n\n  tests.sort(function (testA, testB) {\n    const nameA = testA.suiteName + \"/\" + testA.testName;\n    const nameB = testB.suiteName + \"/\" + testB.testName;\n    return nameA.localeCompare(nameB);\n  });\n\n  return tests;\n}\n"],"mappings":"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"}