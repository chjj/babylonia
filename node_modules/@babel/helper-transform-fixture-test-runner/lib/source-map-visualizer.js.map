{"version":3,"names":["_traceMapping","require","CONTEXT_SIZE","LOC_SIZE","CONTENT_SIZE","padStart","Function","call","bind","str","len","pad","repeat","Math","max","length","padEnd","simpleCodeFrameRange","lines","line","colStart","colEnd","min","start","end","markerSize","marker","markerPadding","code","slice","loc","joinMultiline","left","right","leftLen","_leftLen","leftLines","split","rightLines","reduce","linesCount","res","i","visualize","output","map","sourcesLines","Map","sources","source","index","sourcesContent","outputLines","ranges","prev","eachMapping","TraceMap","mapping","original","from","originalLine","column","originalColumn","to","generated","generatedLine","generatedColumn","Infinity","push","input","get","join"],"sources":["../src/source-map-visualizer.ts"],"sourcesContent":["import {\n  TraceMap,\n  eachMapping,\n  type EachMapping,\n} from \"@jridgewell/trace-mapping\";\n\nconst CONTEXT_SIZE = 4;\nconst LOC_SIZE = 10;\nconst CONTENT_SIZE = 15;\n\n// TODO(Babel 8): Just use \"\".padStart when dropping Node.js 6\nconst padStart: (str: string, len: number, pad: string) => string = \"\".padStart\n  ? (Function.call.bind(\"\".padStart) as any)\n  : (str, len, pad) => pad.repeat(Math.max(0, len - str.length)) + str;\nconst padEnd: (str: string, len: number, pad: string) => string = \"\".padStart\n  ? (Function.call.bind(\"\".padEnd) as any)\n  : (str, len, pad) => str + pad.repeat(Math.max(0, len - str.length));\n\nfunction simpleCodeFrameRange(\n  lines: string[],\n  line: number,\n  colStart: number,\n  colEnd: number,\n) {\n  colEnd = Math.min(colEnd, lines[line - 1].length);\n\n  const start = Math.max(colStart - CONTEXT_SIZE, 0);\n  const end = Math.min(colEnd + CONTEXT_SIZE, lines[line - 1].length);\n\n  const markerSize = colEnd - colStart;\n  const marker = markerSize === 0 ? \"><\" : \" \" + \"^\".repeat(markerSize);\n  const markerPadding = colStart - start - 1;\n\n  const code = lines[line - 1].slice(start, end);\n  const loc = padStart(`(${line}:${colStart}-${colEnd}) `, LOC_SIZE, \" \");\n  return loc + code + \"\\n\" + \" \".repeat(markerPadding + loc.length) + marker;\n}\n\nfunction joinMultiline(left: string, right: string, leftLen?: number) {\n  const leftLines = left.split(\"\\n\");\n  const rightLines = right.split(\"\\n\");\n\n  leftLen ??= leftLines.reduce((len, line) => Math.max(len, line.length), 0);\n\n  const linesCount = Math.max(leftLines.length, rightLines.length);\n  let res = \"\";\n  for (let i = 0; i < linesCount; i++) {\n    if (res !== \"\") res += \"\\n\";\n    if (i < leftLines.length) res += padEnd(leftLines[i], leftLen, \" \");\n    else res += \" \".repeat(leftLen);\n    if (i < rightLines.length) res += rightLines[i];\n  }\n  return res;\n}\n\nexport default function visualize(output: string, map: any) {\n  const sourcesLines = new Map<string, string[]>(\n    map.sources.map((source: string, index: number) => [\n      source,\n      map.sourcesContent[index].split(\"\\n\"),\n    ]),\n  );\n  const outputLines = output.split(\"\\n\");\n\n  type Pos = { line: number; column: number };\n  type Range = { from: Pos; to: Pos };\n  const ranges: Array<{\n    original: Range;\n    generated: Range;\n    source: string;\n  }> = [];\n  let prev: EachMapping = null;\n  eachMapping(new TraceMap(map), mapping => {\n    if (prev === null) {\n      prev = mapping;\n      return;\n    }\n    const original = {\n      from: { line: prev.originalLine, column: prev.originalColumn },\n      to: { line: mapping.originalLine, column: mapping.originalColumn },\n    };\n    const generated = {\n      from: { line: prev.generatedLine, column: prev.generatedColumn },\n      to: { line: mapping.generatedLine, column: mapping.generatedColumn },\n    };\n    if (original.from.line !== original.to.line) {\n      original.to.line = original.from.line;\n      original.to.column = Infinity;\n    } else if (original.to.column < original.from.column) {\n      original.to.column = original.from.column;\n    }\n    if (generated.from.line !== generated.to.line) {\n      generated.to.line = generated.from.line;\n      generated.to.column = Infinity;\n    } else if (generated.to.column < generated.from.column) {\n      generated.to.column = generated.from.column;\n    }\n    ranges.push({ original, generated, source: prev.source });\n    prev = mapping;\n  });\n  // TODO(@nicolo-ribaudo): The \"input source map complex\" fixture in\n  // @babel/core generates a source map with the last mapping that has `null`\n  // originalLine, originalColumn, generatedLine, and generatedColumn. Verify if\n  // this is expected.\n  if (prev.originalLine) {\n    ranges.push({\n      original: {\n        from: { line: prev.originalLine, column: prev.originalColumn },\n        to: { line: prev.originalLine, column: Infinity },\n      },\n      generated: {\n        from: { line: prev.generatedLine, column: prev.generatedColumn },\n        to: { line: prev.generatedLine, column: Infinity },\n      },\n      source: prev.source,\n    });\n  }\n\n  // Multiple generated ranges can map to the same original range. The previous\n  // loop would generate a 0-length original range, so replace its end with the\n  // end of the following range if possible.\n  for (let i = ranges.length - 1; i >= 0; i--) {\n    const { original } = ranges[i];\n    if (\n      original.from.column === original.to.column &&\n      original.to.column < ranges[i + 1].original.to.column\n    ) {\n      original.to.column = ranges[i + 1].original.to.column;\n    }\n  }\n\n  const res = ranges.map(({ original, generated, source }) => {\n    const input = simpleCodeFrameRange(\n      sourcesLines.get(source),\n      original.from.line,\n      original.from.column,\n      original.to.column,\n    );\n    const output = simpleCodeFrameRange(\n      outputLines,\n      generated.from.line,\n      generated.from.column,\n      generated.to.column,\n    );\n\n    return joinMultiline(\n      joinMultiline(\n        input,\n        \" <--  \",\n        LOC_SIZE + CONTEXT_SIZE * 2 + CONTENT_SIZE,\n      ),\n      output,\n    );\n  });\n\n  return res.join(\"\\n\\n\");\n}\n"],"mappings":"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"}