{"version":3,"names":["_helperPluginUtils","require","_helperModuleImports","_helperCompilationTargets","_pluginSyntaxImportSource","_excluded","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","imrCompatData","compatData","web","chrome","edge","firefox","opera","safari","opera_mobile","ios","samsung","deno","node","isEmpty","obj","imp","path","name","module","addNamed","importedType","_default","exports","default","declare","api","types","t","template","assertVersion","_api$targets","targets","nodeTarget","webTargets","emptyNodeTarget","emptyWebTargets","needsNodeSupport","needsWebSupport","nodeSupportsIMR","isRequired","webSupportsIMR","helperESM","helperCJS","getHelper","file","modules","get","_helperCJS","buildHelper","_helperESM","Error","inherits","syntaxImportSourcePhase","visitor","Program","sourceType","helper","t2","ids","fetches","decl","_decl$node$attributes","_decl$node$assertions","isImportDeclaration","phase","attributes","assertions","buildCodeFrameError","specifier","specifiers","assertImportDefaultSpecifier","push","local","buildFetch","remove","declarators","rhs","needsAwait","awaitExpression","variableDeclarator","arrayPattern","expression","ast","arrayExpression","unshiftContainer","variableDeclaration","ImportExpression","options","replaceWith","buildFetchAsync","toCommonJS","_buildFetchAsync","buildFetchSync","p","w","n","webIMR","wI","nodeIMR","nI","toCJS","c","imr","s","imrWithFallback","cloneNode","buildFetchAsyncWrapped","isStringLiteral","identifier"],"sources":["../src/index.ts"],"sourcesContent":["import { declare } from \"@babel/helper-plugin-utils\";\nimport type { NodePath } from \"@babel/traverse\";\nimport type { types as t, File } from \"@babel/core\";\nimport { addNamed } from \"@babel/helper-module-imports\";\nimport { isRequired } from \"@babel/helper-compilation-targets\";\nimport syntaxImportSourcePhase from \"@babel/plugin-syntax-import-source\";\n\n// `import.meta.resolve` compat data.\n// Source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/import.meta/resolve#browser_compatibility\n// Once Node.js implements `fetch` of local files, we can re-use the web implementation for it\n// similarly to how we do for Deno.\nconst imrCompatData = {\n  compatData: {\n    web: {\n      chrome: \"105.0.0\",\n      edge: \"105.0.0\",\n      firefox: \"106.0.0\",\n      opera: \"91.0.0\",\n      safari: \"16.4.0\",\n      opera_mobile: \"72.0.0\",\n      ios: \"16.4.0\",\n      samsung: \"20.0\",\n      deno: \"1.24.0\",\n    },\n    node: {\n      node: \"20.6.0\",\n    },\n  },\n};\n\nfunction isEmpty(obj: object) {\n  return Object.keys(obj).length === 0;\n}\n\nfunction imp(path: NodePath, name: string, module: string) {\n  return addNamed(path, name, module, { importedType: \"es6\" });\n}\n\nexport default declare(api => {\n  const { types: t, template } = api;\n  api.assertVersion(\n    process.env.BABEL_8_BREAKING && process.env.IS_PUBLISH\n      ? PACKAGE_JSON.version\n      : \"^7.23.0\",\n  );\n\n  const { node: nodeTarget, ...webTargets } = api.targets();\n  const emptyNodeTarget = nodeTarget == null;\n  const emptyWebTargets = isEmpty(webTargets);\n  const needsNodeSupport = !emptyNodeTarget || emptyWebTargets;\n  const needsWebSupport = !emptyWebTargets || emptyNodeTarget;\n\n  const nodeSupportsIMR =\n    !emptyNodeTarget &&\n    !isRequired(\"node\", { node: nodeTarget }, imrCompatData);\n  const webSupportsIMR =\n    !emptyWebTargets && !isRequired(\"web\", webTargets, imrCompatData);\n\n  let helperESM: ReturnType<typeof buildHelper>;\n  let helperCJS: ReturnType<typeof buildHelper>;\n\n  const getHelper = (file: File) => {\n    const modules = file.get(\"@babel/plugin-transform-modules-*\");\n    if (modules === \"commonjs\") {\n      return (helperCJS ??= buildHelper(true));\n    }\n    if (modules == null) {\n      return (helperESM ??= buildHelper(false));\n    }\n    throw new Error(\n      `@babel/plugin-proposal-import-wasm-source can only be used when not ` +\n        `compiling modules, or when compiling them to CommonJS.`,\n    );\n  };\n\n  return {\n    name: \"proposal-import-wasm-source\",\n\n    inherits: syntaxImportSourcePhase,\n\n    visitor: {\n      Program(path) {\n        if (path.node.sourceType !== \"module\") return;\n\n        const helper = getHelper(this.file);\n\n        // TS reports that 'Assertions require every name in the call target to be\n        // declared with an explicit type annotation.' if we just call\n        // t.assertImportDefaultSpecifier, so we _explicitly_ annotate `t` as\n        // having type `typeof t`. Unfortunately this is a design limitation of\n        // the TS type checker, so we need to manually help it:\n        // https://github.com/microsoft/TypeScript/issues/36931\n        const t2: typeof t = t;\n\n        const ids: t.Identifier[] = [];\n        const fetches: t.Expression[] = [];\n        for (const decl of path.get(\"body\")) {\n          if (!decl.isImportDeclaration({ phase: \"source\" })) continue;\n\n          if (decl.node.attributes?.length || decl.node.assertions?.length) {\n            throw path.buildCodeFrameError(\n              \"`import source` with import attributes cannot be compiled.\",\n            );\n          }\n\n          const specifier = decl.node.specifiers[0];\n          t2.assertImportDefaultSpecifier(specifier);\n\n          ids.push(specifier.local);\n          fetches.push(helper.buildFetch(decl.node.source, path));\n          decl.remove();\n        }\n        if (ids.length === 0) return;\n\n        const declarators: t.VariableDeclarator[] = [];\n        if (ids.length === 1) {\n          let rhs = fetches[0];\n          if (helper.needsAwait) rhs = t.awaitExpression(rhs);\n          declarators.push(t.variableDeclarator(ids[0], rhs));\n        } else if (helper.needsAwait) {\n          declarators.push(\n            t.variableDeclarator(\n              t.arrayPattern(ids),\n              t.awaitExpression(\n                template.expression.ast`\n                  Promise.all(${t.arrayExpression(fetches)})\n                `,\n              ),\n            ),\n          );\n        } else {\n          for (let i = 0; i < ids.length; i++) {\n            declarators.push(t.variableDeclarator(ids[i], fetches[i]));\n          }\n        }\n\n        path.unshiftContainer(\n          \"body\",\n          t.variableDeclaration(\"const\", declarators),\n        );\n      },\n\n      ImportExpression(path) {\n        if (path.node.phase !== \"source\") return;\n\n        if (path.node.options) {\n          throw path.buildCodeFrameError(\n            \"`import.source` with an options bag cannot be compiled.\",\n          );\n        }\n\n        path.replaceWith(\n          getHelper(this.file).buildFetchAsync(path.node.source, path),\n        );\n      },\n    },\n  };\n\n  function buildHelper(toCommonJS: boolean) {\n    let buildFetchAsync: (\n      specifier: t.Expression,\n      path: NodePath,\n    ) => t.Expression;\n    let buildFetchSync: typeof buildFetchAsync;\n\n    // \"p\" stands for pattern matching :)\n    const p = ({\n      web: w,\n      node: n,\n      webIMR: wI = webSupportsIMR,\n      nodeIMR: nI = nodeSupportsIMR,\n      toCJS: c = toCommonJS,\n    }: {\n      web: boolean;\n      node: boolean;\n      webIMR?: boolean;\n      nodeIMR?: boolean;\n      toCJS?: boolean;\n      preferSync?: boolean;\n    }) => +w + (+n << 1) + (+wI << 2) + (+nI << 3) + (+c << 4);\n\n    const imr = (s: t.Expression) => template.expression.ast`\n      import.meta.resolve(${s})\n    `;\n    const imrWithFallback = (s: t.Expression) => template.expression.ast`\n      import.meta.resolve?.(${s}) ??\n      new URL(${t.cloneNode(s)}, import.meta.url)\n    `;\n\n    switch (\n      p({\n        web: needsWebSupport,\n        node: needsNodeSupport,\n        webIMR: webSupportsIMR,\n        nodeIMR: nodeSupportsIMR,\n        toCJS: toCommonJS,\n      })\n    ) {\n      case p({ web: true, node: true }):\n        buildFetchAsync = specifier => {\n          const web = template.expression.ast`\n            WebAssembly.compileStreaming(fetch(\n              ${(webSupportsIMR ? imr : imrWithFallback)(\n                t.cloneNode(specifier),\n              )}\n            ))\n          `;\n          const node = nodeSupportsIMR\n            ? template.expression.ast`\n                import(\"fs\")\n                  .then(fs => fs.promises.readFile(new URL(${imr(specifier)})))\n                  .then(WebAssembly.compile)\n              `\n            : template.expression.ast`\n                Promise.all([import(\"fs\"), import(\"module\")])\n                  .then(([fs, module]) =>\n                    fs.promises.readFile(\n                      module.createRequire(import.meta.url)\n                        .resolve(${specifier})\n                    )\n                  )\n                  .then(WebAssembly.compile)\n              `;\n          return template.expression.ast`\n            typeof process === \"object\" && process.versions?.node\n              ? ${node}\n              : ${web}\n          `;\n        };\n        break;\n      case p({ web: true, node: true, webIMR: false, nodeIMR: true }):\n        buildFetchAsync = specifier => template.expression.ast`\n          typeof process === \"object\" && process.versions?.node\n            ? import(\"fs\").then(fs =>\n                new WebAssembly.Module(fs.readFileSync(\n                  new URL(${imr(specifier)})\n                ))\n              )\n            : WebAssembly.compileStreaming(fetch(${imrWithFallback(specifier)}))\n        `;\n        break;\n      case p({ web: true, node: false, webIMR: true }):\n        buildFetchAsync = specifier => template.expression.ast`\n          WebAssembly.compileStreaming(fetch(${imr(specifier)}))\n        `;\n        break;\n      case p({ web: true, node: false, webIMR: false }):\n        buildFetchAsync = specifier => template.expression.ast`\n          WebAssembly.compileStreaming(fetch(${imrWithFallback(specifier)}))\n        `;\n        break;\n      case p({ web: false, node: true, toCJS: true }):\n        buildFetchSync = specifier => template.expression.ast`\n          new WebAssembly.Module(\n            require(\"fs\").readFileSync(\n              require.resolve(${specifier})\n            )\n          )\n        `;\n        buildFetchAsync = specifier => template.expression.ast`\n          require(\"fs\").promises.readFile(require.resolve(${specifier}))\n            .then(WebAssembly.compile)\n        `;\n        break;\n      case p({ web: false, node: true, toCJS: false, nodeIMR: true }):\n        buildFetchSync = (specifier, path) => template.expression.ast`\n          new WebAssembly.Module(\n            ${imp(path, \"readFileSync\", \"fs\")}(\n              new URL(${imr(specifier)})\n            )\n          )\n        `;\n        buildFetchAsync = (specifier, path) => template.expression.ast`\n          ${imp(path, \"promises\", \"fs\")}\n            .readFile(new URL(${imr(specifier)}))\n            .then(WebAssembly.compile)\n        `;\n        break;\n      case p({ web: false, node: true, toCJS: false, nodeIMR: false }):\n        buildFetchSync = (specifier, path) => template.expression.ast`\n          new WebAssembly.Module(\n            ${imp(path, \"readFileSync\", \"fs\")}(\n              ${imp(path, \"createRequire\", \"module\")}(import.meta.url)\n                .resolve(${specifier})\n            )\n          )\n        `;\n        buildFetchAsync = (specifier, path) => template.expression.ast`\n          ${imp(path, \"promises\", \"fs\")}\n            .readFile(\n              ${imp(path, \"createRequire\", \"module\")}(import.meta.url)\n                .resolve(${specifier})\n            )\n            .then(WebAssembly.compile)\n        `;\n        break;\n      default:\n        throw new Error(\"Internal Babel error: unreachable code.\");\n    }\n\n    buildFetchAsync ??= buildFetchSync;\n    const buildFetchAsyncWrapped: typeof buildFetchAsync = (\n      expression,\n      path,\n    ) => {\n      if (t.isStringLiteral(expression)) {\n        return template.expression.ast`\n          Promise.resolve().then(() => ${buildFetchAsync(expression, path)})\n        `;\n      } else {\n        return template.expression.ast`\n          Promise.resolve(\\`\\${${expression}}\\`).then((s) => ${buildFetchAsync(\n            t.identifier(\"s\"),\n            path,\n          )})\n        `;\n      }\n    };\n\n    return {\n      buildFetch: buildFetchSync || buildFetchAsync,\n      buildFetchAsync: buildFetchAsyncWrapped,\n      needsAwait: !buildFetchSync,\n    };\n  }\n});\n"],"mappings":"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"}